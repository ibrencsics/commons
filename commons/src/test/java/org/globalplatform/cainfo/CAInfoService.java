package org.globalplatform.cainfo;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.2
 * 2012-04-06T15:46:21.050+02:00
 * Generated source version: 2.5.2
 * 
 */
@WebServiceClient(name = "CAInfoService", 
                  wsdlLocation = "CAInfo.wsdl",
                  targetNamespace = "http://globalplatform.org/cainfo") 
public class CAInfoService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://globalplatform.org/cainfo", "CAInfoService");
    public final static QName CAInfoEndPoint = new QName("http://globalplatform.org/cainfo", "CAInfoEndPoint");
    static {
        URL url = CAInfoService.class.getResource("CAInfo.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(CAInfoService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "CAInfo.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public CAInfoService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CAInfoService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CAInfoService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns CAInfo
     */
    @WebEndpoint(name = "CAInfoEndPoint")
    public CAInfo getCAInfoEndPoint() {
        return super.getPort(CAInfoEndPoint, CAInfo.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CAInfo
     */
    @WebEndpoint(name = "CAInfoEndPoint")
    public CAInfo getCAInfoEndPoint(WebServiceFeature... features) {
        return super.getPort(CAInfoEndPoint, CAInfo.class, features);
    }

}
