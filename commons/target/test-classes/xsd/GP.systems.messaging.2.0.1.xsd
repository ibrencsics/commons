<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2011 sp1 (http://www.altova.com) by Patrice AMIEL (Gemalto SA) -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:gpm="http://namespaces.globalplatform.org/systems-messaging/2.0.1" xmlns:gpp="http://namespaces.globalplatform.org/systems-profiles/1.1.1" targetNamespace="http://namespaces.globalplatform.org/systems-messaging/2.0.1" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xsd:import namespace="http://namespaces.globalplatform.org/systems-profiles/1.1.1" schemaLocation="GP.systems.profiles.1.1.1.xsd"/>
	<xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
	<xsd:element name="ApplicationAuditTrail">
		<xsd:annotation>
			<xsd:documentation>Describes the message between Data Collator and Application
Provider for audit data</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:ApplicationCommonLog" minOccurs="0"/>
				<xsd:element ref="gpm:ApplicationLogPerCRN" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="BatchID" type="gpm:BatchID" use="optional"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ApplicationLogPerCRN">
		<xsd:annotation>
			<xsd:documentation>Application Return Data for each CRN</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:all>
				<xsd:element ref="gpm:CRN"/>
				<xsd:element ref="gpm:ApplicationLog"/>
			</xsd:all>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ApplicationCommonData">
		<xsd:annotation>
			<xsd:documentation>Used to carry Application Common Data to avoid the duplication
of transported data.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:ApplicationData"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ApplicationData">
		<xsd:annotation>
			<xsd:documentation>Sample of Application Data Element</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:AID" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Updated for version 2.0.0: element is made optional as it is:
- Not used for mobile-NFC service management
- But mandatory for other use cases</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="gpm:ApplicationProfileUniqueID" minOccurs="0"/>
				<xsd:element ref="gpm:ProcessingStep" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="gpm:LogData" minOccurs="0"/>
				<xsd:element ref="gpm:ICCData" minOccurs="0"/>
				<xsd:element ref="ds:Signature" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AID">
		<xsd:annotation>
			<xsd:documentation>Application Identifier</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="AID" type="xsd:hexBinary" use="required"/>
			<xsd:attribute name="Order" type="xsd:short" use="required">
				<xsd:annotation>
					<xsd:documentation>Order in which the application need to be selected on
the card processed</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TargeState" type="xsd:string" use="optional"/>
			<xsd:attribute name="ReachedState" type="xsd:string" use="optional"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ApplicationProfileUniqueID" type="gpp:uniqueID">
		<xsd:annotation>
			<xsd:documentation>Application Profile Unique ID </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ProcessingStep">
		<xsd:annotation>
			<xsd:documentation>Processing Steps for this Application such as:Load, Install or
Personalization </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:PersoDeviceIns" minOccurs="0"/>
				<xsd:element ref="gpm:ScriptFragment" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Renamed for version 2.0.0 to avoid naming conflict: Script --> ScriptFragment</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="SECommand" type="gpm:SECommandType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The SE Command to be executed.
Updated for version 2.0.0: element is added to the ProcessingStep structure. It is optional as:
- Mandatory for mobile-NFC service management
- But not used for other use cases</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Action" use="required">
				<xsd:annotation>
					<xsd:documentation>The action to be performed in this processing step
</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Requirement" use="required">
				<xsd:annotation>
					<xsd:documentation>Is this processing step mandatory ('01') or optional
('00'). For example if the action is "initialize" and the application is already
initialized, a setting of mandatory says re-initialize, a setting of optional says do not
re-initialize</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="DataSet" use="optional">
				<xsd:annotation>
					<xsd:documentation>Name of the DataSet in ICCDATA to be used to perform
the action for this step.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DataSet">
		<xsd:annotation>
			<xsd:documentation>Data Set to be used to perform the action for this
step.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Data" maxOccurs="unbounded"/>
				<xsd:element ref="gpp:TransportKey" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Name" type="xsd:string" use="optional"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Data">
		<xsd:annotation>
			<xsd:documentation>Additional Data to be used to perform the action for this
step.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="DataElement" use="optional">
				<xsd:annotation>
					<xsd:documentation>If using GP Scripting Language scripts, DataElements
are expected.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Value" use="optional">
				<xsd:annotation>
					<xsd:documentation>If using GP Scripting Language scripts, the value of
the DataElements are expected. </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PersoDeviceIns">
		<xsd:annotation>
			<xsd:documentation>Personalization device instructions for this
application.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Data" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="LogData">
		<xsd:annotation>
			<xsd:documentation>Refer Common Personalization Specification for a description of
this field.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:DataSet" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ICCData">
		<xsd:annotation>
			<xsd:documentation>The data for this application to be sent to the IC card
</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:DataSet" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ApplicationDataNotification">
		<xsd:annotation>
			<xsd:documentation>Describes Message structure between an Application Provider and
a Collator.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:ApplicationCommonData" minOccurs="0"/>
				<xsd:element ref="gpm:ApplicationDataPerCRN" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="BatchID" type="gpm:BatchID" use="required">
				<xsd:annotation>
					<xsd:documentation/>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ApplicationDataPerCRN">
		<xsd:annotation>
			<xsd:documentation>Application Data for each CRN</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:all>
				<xsd:element ref="gpm:CRN"/>
				<xsd:element ref="gpm:ApplicationData"/>
			</xsd:all>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ApplicationCommonLog">
		<xsd:annotation>
			<xsd:documentation>Used to carry Application Return Common Data to avoid the
duplication of the return data transported </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:ApplicationLog"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ApplicationLog">
		<xsd:annotation>
			<xsd:documentation>Sample of Application Return Data</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:AID" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Updated for version 2.0.0: element is made optional as it is:
- Not used for mobile-NFC service management
- But mandatory for other use cases</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="gpm:ApplicationProfileUniqueID" minOccurs="0"/>
				<xsd:element ref="gpm:ProcessingStepResult" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="gpm:LogData" minOccurs="0"/>
				<xsd:element ref="ds:Signature" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ProcessingStepResult">
		<xsd:annotation>
			<xsd:documentation>Processing Steps Result for this Application for the
Application Provider audit </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:PersoDeviceIns" minOccurs="0"/>
				<xsd:element ref="gpm:ScriptFragment" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Renamed for version 2.0.0 to avoid naming conflict: Script --> ScriptFragment</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="gpm:Error" minOccurs="0"/>
				<xsd:element name="SECommandResult" type="gpm:SECommandResultType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The result of the executed SE Command.
Updated for version 2.0.0: element is added to the ProcessingStep structure. It is optional as:
- Mandatory for mobile-NFC service management
- But not used for other use cases</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Action" type="xsd:hexBinary" use="required">
				<xsd:annotation>
					<xsd:documentation>Action performed in this processing
step</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Requirement" type="xsd:hexBinary" use="required">
				<xsd:annotation>
					<xsd:documentation>Is this processing step was mandatory ('01') or
optional ('00'). For example if the action was "initialize" and the application was already
initialized, a setting of mandatory says re-initialize, a setting of optional says do not
re-initialize</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="DataSet" type="xsd:hexBinary" use="optional">
				<xsd:annotation>
					<xsd:documentation>Tag of the data in ICCReturnData that contains the
actual return data. BER TLV encoded. If no data then '00'.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="StatusWords" type="xsd:hexBinary" use="optional">
				<xsd:annotation>
					<xsd:documentation>Status Words return by card in t this
step.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Error">
		<xsd:complexType>
			<xsd:attribute name="ErrorCategory" use="optional"/>
			<xsd:attribute name="ErrorNumber"/>
			<xsd:attribute name="ErrorDescription" use="optional"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="BatchAuditTrail">
		<xsd:annotation>
			<xsd:documentation>- Defines the message structure between personalization system
and a Data Decollator (usually includes ApplicatioReturnData elements) for a batch of cards.
- Defines the message structure between a Data Decollator and an Issuer SCMS (may or may not
include ApplicatioReturnData elements) for a batch of cards.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:ReturnCodeStep" minOccurs="0"/>
				<xsd:element ref="gpm:Error" minOccurs="0"/>
				<xsd:element ref="gpm:EnvironmentContainerLog" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="BatchID" type="gpm:BatchID" use="required"/>
			<xsd:attribute name="IssuingEntity" use="required">
				<xsd:annotation>
					<xsd:documentation>Describes source of Issuing Request. Binary field of
to identify the Issuer at the Header level. Example could be the SCMS ID</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ProcessingEntity" use="required">
				<xsd:annotation>
					<xsd:documentation>Describes processing facility. Binary field to
identify the actor responsible for the processing of the personalization
file.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="User" use="optional">
				<xsd:annotation>
					<xsd:documentation>ASCII. This field can be used for proprietary
information. E.g., Order number. </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="EnvironmentContainerLog">
		<xsd:annotation>
			<xsd:documentation>The environment container Log is for audit purposes only and
should be returned to the Issuer.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Error" minOccurs="0"/>
				<xsd:element ref="gpm:JobContainerLog" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="EnvironmentName" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. Description of the environment in which the
data will be used. This can identify any environment</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="EnvironmentVersion" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. Major, Minor</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="JobContainerLog">
		<xsd:annotation>
			<xsd:documentation>The job container Log is elementary and provides basic feedback
to the Issuer only.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Error" minOccurs="0"/>
				<xsd:element ref="gpm:LogContainerHeader" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="JobID" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. User defined</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="JobPriorityLevel" use="required">
				<xsd:annotation>
					<xsd:documentation>This field is used to provide the priority for each
job within the particular environment. For example, the job and cost for SIM cards may be
High and the Job for Loyalty card low. 1 - High2 – Medium3 – Low</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="RiskLevel" use="required">
				<xsd:annotation>
					<xsd:documentation>This optional field may be used for costing or to
determine the number of sample validations to perform on the personalized cards.1 - High2 –
Medium3 – Low</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Date" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. Date in format YYYYMMDDHHMMSS when the jobs
were processed</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="LogContainerHeader">
		<xsd:annotation>
			<xsd:documentation>The data container header log is merely a confirmation of the
original Data Container Header.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Error" minOccurs="0"/>
				<xsd:element ref="gpm:CommonLogContainer" minOccurs="0"/>
				<xsd:element ref="gpm:LogContainer" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="DataGenerationDate" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. The date the personalization data was
generated</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CardProductID" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. A reference to the particular card product as
assigned by the SCMS</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CardProductVersion" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. An optional Card product version. Major,
Minor</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="IssuerName" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. The name of the Issuing
entity</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CardRecordCount" use="required">
				<xsd:annotation>
					<xsd:documentation>Binary (i.e. number of plastics in
hopper)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PlasticStockID" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. An identifier for the actual card stock to be
used</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ProcessingDate" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. Date by which the cards have been
processed.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CommonLogContainer">
		<xsd:annotation>
			<xsd:documentation>The return data container is the section of the data audit
trail that contains the ICC specific log data required by the Issuer and Application
Providers. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence maxOccurs="unbounded">
				<xsd:element ref="gpm:CommonLogIdentifierCode"/>
				<xsd:element ref="gpm:ModuleLog" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="gpm:DeliveryModuleLog" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="LogContainer">
		<xsd:annotation>
			<xsd:documentation>The return data container is the section of the data audit
trail that contains the ICC specific log data required by the Issuer and Application
Providers. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence maxOccurs="unbounded">
				<xsd:element ref="gpm:LogIdentifierCode"/>
				<xsd:element ref="gpm:ModuleLog" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="gpm:DeliveryModuleLog" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CommonLogIdentifierCode">
		<xsd:annotation>
			<xsd:documentation>RIC, An identifier that specifies that this is log data for
chip card application(s).</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:CardCommonConfigurationLog" minOccurs="0"/>
				<xsd:element ref="gpm:ApplicationCommonLog" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="Identifier" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="LogIdentifierCode">
		<xsd:annotation>
			<xsd:documentation>RIC, An identifier that specifies that this is log data for
chip card application(s).</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:CardConfigurationLog" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Updated for version 2.0.0: element is made optional as it is:
- Not used for mobile-NFC service management
- But mandatory for other use cases</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="gpm:ApplicationLog" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="Identifier" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CardCommonConfigurationLog">
		<xsd:annotation>
			<xsd:documentation>Card Configuration Information </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Error" minOccurs="0"/>
				<xsd:element ref="gpm:CollatorReturnCode" minOccurs="0"/>
				<xsd:element ref="gpm:ValidCardProfileID" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="DecollationStatus" use="optional">
				<xsd:annotation>
					<xsd:documentation>Collator Status 0 – Not Applicable1 – Request for
decollation2 – Decollation complete </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CardConfigurationLog">
		<xsd:annotation>
			<xsd:documentation>Card Configuration Information </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Error" minOccurs="0"/>
				<xsd:element ref="gpm:CRN"/>
				<xsd:element ref="gpm:CollatorReturnCode" minOccurs="0"/>
				<xsd:element ref="gpm:ValidCardProfileID" minOccurs="0"/>
				<xsd:element ref="gpm:PhysicalCardIdentifier" maxOccurs="unbounded"/>
				<xsd:element ref="gpm:MuteCardsNumber" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="DecollationStatus" use="optional">
				<xsd:annotation>
					<xsd:documentation>Decollation Status 0 – Not Applicable1 – Request for
decollation2 – Decollation complete </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ReturnCodeStep">
		<xsd:annotation>
			<xsd:documentation>ASCII (The step indicates at which level the error
occurred</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="AuditTrailHeader" type="xsd:boolean"/>
			<xsd:attribute name="EnvironmentContainer" type="xsd:boolean"/>
			<xsd:attribute name="JobContainer" type="xsd:boolean"/>
			<xsd:attribute name="DataContainerHeader" type="xsd:boolean"/>
			<xsd:attribute name="Collation" type="xsd:boolean"/>
			<xsd:attribute name="DataContainer" type="xsd:boolean"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CollatorReturnCode">
		<xsd:annotation>
			<xsd:documentation>Return Code from Collator.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Error" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Code"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CardCustomization">
		<xsd:annotation>
			<xsd:documentation>- Defines the message structure between an Issuer SCMS and a
data Collator (with or without ApplicatioData elements) for an individual card (e.g. post
issuance card customization).
- Defines the message structure between a data Collator and a post issuance loader server or
personalization bureau (usually includes ApplicatioData elements) for an individual
card.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:ModuleIdentifierCode"/>
				<xsd:element ref="gpm:GenericModule" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Renamed for version 2.0.0 to avoid naming conflict: Module --> GenericModule</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="gpm:ModulesCommonData" minOccurs="0"/>
				<xsd:element ref="gpm:DeliveryModule" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="BatchID" type="gpm:BatchID" use="optional"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ApplicationDataRequest">
		<xsd:annotation>
			<xsd:documentation>Defines the message structure between an Issuer and an
Application Provider</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:CRN" maxOccurs="unbounded"/>
				<xsd:element ref="gpm:AID" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="BatchID" type="gpm:BatchID" use="optional"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CardAuditTrail">
		<xsd:annotation>
			<xsd:documentation>- Defines the message structure between a post issuance loader
server or a personalization system and a data Decollator (usually includes
ApplicatioReturnData elements) for an individual card.
- Defines the message structure between a data Decollator and an Issuer SCMS (may or may not
include ApplicatioReturnData elements) for an individual card.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:LogIdentifierCode"/>
			</xsd:sequence>
			<xsd:attribute name="BatchID" type="gpm:BatchID" use="optional"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="BatchCardCustomization">
		<xsd:annotation>
			<xsd:documentation>- Defines the message structure between an Issuer SCMS and a
data Collator (with or without ApplicatioData elements) for a batch of cards.
- Defines the message structure between a data Collator and a Loader-personalization bureau
(usually includes ApplicatioData elements) for a batch of cards.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:EnvironmentContainer" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="BatchID" type="gpm:BatchID" use="required"/>
			<xsd:attribute name="IssuingEntity" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>Describes source of Issuing Request. Binary field of
to identify the Issuer at the Header level. Example could be the SCMS ID</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ProcessingEntity" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>Describes processing facility. Binary field to
identify the actor responsible for the processing of the personalization
file.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="UserData" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>ASCII. This field can be used for proprietary
information. E.g., Order number. </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="EnvironmentContainer">
		<xsd:annotation>
			<xsd:documentation>Describes the environment in which personalization is to take
place.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:JobContainer" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="EnvironmentName" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. Description of the environment in which the
data will be used. This can identify any environment</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="EnvironmentVersion" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. Major, Minor</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Preference" use="required">
				<xsd:annotation>
					<xsd:documentation>This field is available for bureau environments. The
field describes whether a certain environment is mandatory. 1 - Mandatory2 – Compatible3 –
Don't Care</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CommandInterpreterSupport">
				<xsd:annotation>
					<xsd:documentation>This field identifies whether the environment
supports script processing.1 – Mandatory2 – Compatible3 – Don't Care</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CommandInterpreterType" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>ASCII. This describes the type of command
interpreter. E.g. GP Scripting</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CommandInterpreterVersion" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>ASCII. Major, Minor</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="JobContainer">
		<xsd:annotation>
			<xsd:documentation>The job container is provided to achieve an additional level of
granularity at the bureau level. </xsd:documentation>
			<xsd:documentation>The job container is provided to achieve an additional level of
granularity at the bureau level. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:DataContainerHeader" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="JobID">
				<xsd:annotation>
					<xsd:documentation>ASCII. User defined</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="JobPriorityLevel">
				<xsd:annotation>
					<xsd:documentation>This field is used to provide the priority for each
job within the particular environment. For example, the job and cost for SIM cards may be
High and the Job for Loyalty card low. 1 - High2 – Medium3 – Low</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="RiskLevel">
				<xsd:annotation>
					<xsd:documentation>This optional field may be used for costing or to
determine the number of sample validations to perform on the personalized cards.1 - High2 –
Medium3 – Low</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DataContainerHeader">
		<xsd:annotation>
			<xsd:documentation>The data container header is a description of the number of
cards to be personalized and the type of plastic to be used. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:CommonDataContainer" minOccurs="0"/>
				<xsd:element ref="gpm:DataContainer" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="DataGenerationDate" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. The date the personalization data was
generated</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CardProductID" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. A reference to the particular card product as
assigned by the SCMS</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CardProductVersion" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. An optional Card product version. Major,
Minor</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="IssuerName" use="required">
				<xsd:annotation>
					<xsd:documentation>ASCII. The name of the Issuing
entity</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CardRecordCount" use="required">
				<xsd:annotation>
					<xsd:documentation>Binary (i.e. number of plastics in
hopper)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PlasticStockID">
				<xsd:annotation>
					<xsd:documentation>ASCII. An identifier for the actual card stock to be
used</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="RequiredProcessingDate">
				<xsd:annotation>
					<xsd:documentation>ASCII. Date by which the cards must be
processed.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CommonDataContainer">
		<xsd:annotation>
			<xsd:documentation>The data container is the section of the data stream that
contains the set of personalization records common for every card to be
personalized.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence maxOccurs="unbounded">
				<xsd:element ref="gpm:CommonModuleIdentifierCode"/>
				<xsd:element ref="gpm:GenericModule" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Renamed for version 2.0.0 to avoid naming conflict: Module --> GenericModule</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="gpm:DeliveryModule" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DataContainer">
		<xsd:annotation>
			<xsd:documentation>The data container is the section of the data stream that
contains the set of personalization records for every card to be
personalized.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence maxOccurs="unbounded">
				<xsd:element ref="gpm:ModuleIdentifierCode"/>
				<xsd:element ref="gpm:ModulesCommonData" minOccurs="0"/>
				<xsd:element ref="gpm:GenericModule" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Renamed for version 2.0.0 to avoid naming conflict: Module --> GenericModule</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="gpm:DeliveryModule" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ModuleIdentifierCode">
		<xsd:annotation>
			<xsd:documentation>An identifier that specifies that this is data for chip card
application(s). An ASCII character field matching current personalization standards for
identifying the type of data that follows. The length and values of this field are
established when the personalization device is configured.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:CardConfiguration"/>
				<xsd:element ref="gpm:ApplicationData" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="Identifier" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CommonModuleIdentifierCode">
		<xsd:annotation>
			<xsd:documentation>An identifier that specifies that this is data for chip card
application(s). An ASCII character field matching current personalization standards for
identifying the type of data that follows. The length and values of this field are
established when the personalization device is configured.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:CardCommonConfiguration" minOccurs="0"/>
				<xsd:element ref="gpm:ApplicationCommonData" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="Identifier" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CardConfiguration">
		<xsd:annotation>
			<xsd:documentation>Card Configuration Information </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:CRN" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Updated for version 2.0.0: element is made optional as it is:
- Not used for mobile-NFC service management
- But mandatory for other use cases</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="SecureElementId" type="gpm:SEIdentifierType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Updated for version 2.0.0: element is added to the CardConfiguration structure. It is optional as:
- Mandatory for mobile-NFC service management
- But not used for other use cases</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="gpm:ValidCardProfileID" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="gpm:AID" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="CollatorStatus" use="required">
				<xsd:annotation>
					<xsd:documentation>Collator Status'00' – Not Applicable'01' – request
for collation'02' – request for collation and collation data'03' – collation data only'04' –
collation complete</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CardCommonConfiguration">
		<xsd:annotation>
			<xsd:documentation>Card Configuration Information </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:ValidCardProfileID" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="gpm:AID" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="CollatorStatus" use="required">
				<xsd:annotation>
					<xsd:documentation>Collator Status'00' – Not Applicable'01' – request
for collation'02' – request for collation and collation data'03' – collation data only'04' –
collation complete</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CRN">
		<xsd:annotation>
			<xsd:documentation>CAMS Reference Number3 bytes Binary for SCMS ID CRN is an
OID. It must be unique per record. It's responsibility of the owner of the CRN to make sure
of uniqueness of this number per record.
Following illustrates an example of CRN composition:
Object identifier value Meaning
{ 1 } ISO
{ 1 2 } ISO member body
{ 1 2 031 } Azerbaijan
{ 1 2 031 21 } Joe Doe Inc
{ 1 2 031 21 1 } Joe Doe's Card Management System
{ 1 2 031 21 1 2 } Joe Doe's Card Management System Version 2
{ 1 2 031 21 2 } Joe Doe's Card Numbering Scheme
Note that { 1 2 031 21 } is assigned to Joe Doe Inc, then lets assume that internally Joe
Doe Inc takes this range {1 2 031 21 1 3 } as base of its CRNs. The Joe Doe Inc will
provide the CRN numbers in the
Following range:
1 2 031 21 1 3 00000000000000000000000000000000000001
1 2 031 21 1 3 99999999999999999999999999999999999999
It's a very simplistic of what could be done. Internal rule to the organization may be set,
such as:
1 2 031 21 1 3 [RID=5 bytes] [Country code=2 bytes] [Sequence number = 8 bytes] [and maybe a
"1 byte check value (Modulo 256 (XOR))]
</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="Number" type="xsd:hexBinary" use="required"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ValidCardProfileID" type="gpp:uniqueID">
		<xsd:annotation>
			<xsd:documentation>Holds unique Identifier of valid cardProfile could be
used</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CardLifeCycleState" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Provide card life cycle reached at this
stage</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PhysicalCardIdentifier">
		<xsd:annotation>
			<xsd:documentation>Provide the identifier of a physical card used regardless of
successfull card customization or not</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:CardLifeCycleState"/>
				<xsd:element ref="gpm:AID" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="IdentifierType" type="xsd:string" use="required"/>
			<xsd:attribute name="IdentifierValue" type="xsd:hexBinary" use="required"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:simpleType name="securityType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="0"/>
			<xsd:enumeration value="None"/>
			<xsd:enumeration value="1"/>
			<xsd:enumeration value="Signed"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
Messages begin here
-->
	<xsd:element name="GPMessage">
		<xsd:annotation>
			<xsd:documentation>Parent element for all messages.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:GPHeader"/>
				<xsd:element ref="gpm:GPBody"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="GPHeader">
		<xsd:annotation>
			<xsd:documentation>Simple sample of a message for card
interchange.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence minOccurs="0" maxOccurs="unbounded">
				<xsd:choice>
					<xsd:element ref="ds:Signature" minOccurs="0"/>
					<xsd:element name="RequestingEntity" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element ref="gpm:EntityID" minOccurs="0"/>
								<xsd:element ref="gpm:Entity" minOccurs="0"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="TargetEntity" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element ref="gpm:EntityID" minOccurs="0"/>
								<xsd:element ref="gpm:Entity" minOccurs="0"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element ref="gpm:MessageContext" minOccurs="0"/>
				</xsd:choice>
			</xsd:sequence>
			<xsd:attribute name="TransactionID" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>An ASCII field to identify the message
uniquely</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Source" type="gpm:OID" use="required">
				<xsd:annotation>
					<xsd:documentation>Object Identifier of the sender of
message.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Destination" type="gpm:OID" use="required">
				<xsd:annotation>
					<xsd:documentation>Object Identifier of the receiver of
message.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Type" type="gpm:messageType" use="required">
				<xsd:annotation>
					<xsd:documentation>Specifies message type.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="MessageVersion" type="gpp:version" use="required"/>
			<xsd:attribute name="ErrataVersion" type="xsd:integer" use="optional"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="GPBody">
		<xsd:annotation>
			<xsd:documentation>Element for all GlobalPlatform messages
category.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence maxOccurs="unbounded">
				<xsd:choice>
					<xsd:element ref="gpm:AP" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:CP" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:CPChanges" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:KP" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:KeyExchange" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:LFP" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:ProfileRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:ApplicationDataNotification" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:ApplicationDataRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:CardCustomization" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:BatchCardCustomization" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:ApplicationAuditTrail" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:BatchAuditTrail" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:CardAuditTrail" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:Error" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:CPP" minOccurs="0" maxOccurs="unbounded"/>
					<!-- Version 2.0.0: Begin update -->
					<xsd:element ref="gpm:GetDeviceCapabilityProfileIdRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GetDeviceCapabilityProfileIdResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GetSECapabilityProfileIdRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GetSECapabilityProfileIdResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:CheckMobileSubscriptionEligibilityRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:CheckMobileSubscriptionEligibilityResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:HandleStartServiceStateChangeNotificationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:HandleEndServiceStateChangeNotificationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GetMobileSubscriptionAlternateIdentifierRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GetMobileSubscriptionAlternateIdentifierResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GetSEMobileSubscriptionIdentifierRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GetSEMobileSubscriptionIdentifierResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:HandleMobileSubscriptionIdentifierChangedNotificationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:HandleMobileSubscriptionStatusChangeNotificationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:HandleSERenewalNotificationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:HandleSEDeviceChangedNotificationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:HandleSEMobileSubscriptionChangedNotificationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:HandleSEStatusChangeNotificationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:EnrollSSDOwnerCertificateRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:EnrollSSDOwnerCertificateResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GetCAInformationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GetCAInformationResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:SECommandsGenerationAndRemoteExecutionRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:SECommandsGenerationAndRemoteExecutionResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GenerateDMTokenRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GenerateDMTokenResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:VerifyDMReceiptRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:VerifyDMReceiptResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:BeginConversationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:BeginConversationResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:SendScriptRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:SendScriptResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:EndConversationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:EndConversationResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GetApplicationOrELFStatusRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:GetApplicationOrELFStatusResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:LoadSCWSServicePortalRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:LoadSCWSServicePortalResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:DeleteSCWSServicePortalRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:DeleteSCWSServicePortalResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:LoadDeviceApplicationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:LoadDeviceApplicationResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:BindDeviceApplicationToSEApplicationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:BindDeviceApplicationToSEApplicationResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:DeleteDeviceApplicationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:DeleteDeviceApplicationResponse" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:UnbindDeviceApplicationToSEApplicationRequest" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element ref="gpm:UnbindDeviceApplicationToSEApplicationResponse" minOccurs="0" maxOccurs="unbounded"/>
					<!-- Version 2.0.0: End update -->
				</xsd:choice>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AP">
		<xsd:annotation>
			<xsd:documentation>For an UniqueID value specified, returns the corresponding
Application Profile.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpp:ApplicationProfile"/>
				<xsd:element ref="gpm:ProfileIdentification"/>
			</xsd:sequence>
			<xsd:attribute name="UniqueID" type="gpm:uniqueID" use="required">
				<xsd:annotation>
					<xsd:documentation>UniqueID of the Card Profile being
supplied.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CP">
		<xsd:annotation>
			<xsd:documentation>For an UniqueID value specified, returns the corresponding Card
Profile.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpp:CardProfile"/>
				<xsd:element ref="gpm:ProfileIdentification"/>
			</xsd:sequence>
			<xsd:attribute name="UniqueID" type="gpm:uniqueID" use="required">
				<xsd:annotation>
					<xsd:documentation>UniqueID of the Card Profile being
supplied.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CPChanges">
		<xsd:annotation>
			<xsd:documentation>For an UniqueID value specified, returns the corresponding Card
Profile with only changes noted. The changes should be compared to the existing Card
Profile by the recipient and applied accordingly.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpp:ApplicationInstances"/>
				<xsd:element ref="gpp:LoadFileInstances"/>
				<xsd:element ref="gpp:CardInfo"/>
				<xsd:element ref="gpm:ProfileIdentification"/>
			</xsd:sequence>
			<xsd:attribute name="UniqueID" type="gpm:uniqueID" use="required">
				<xsd:annotation>
					<xsd:documentation>UniqueID of the Card Profile being
supplied.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="KP">
		<xsd:annotation>
			<xsd:documentation>For an UniqueID value specified, returns the corresponding Key
Profile.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpp:KeyProfile"/>
				<xsd:element ref="gpm:ProfileIdentification"/>
			</xsd:sequence>
			<xsd:attribute name="UniqueID" type="gpm:uniqueID" use="required">
				<xsd:annotation>
					<xsd:documentation>UniqueID of the Key Profile being
supplied.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="KeyExchange">
		<xsd:annotation>
			<xsd:documentation>For an UniqueID value specified, returns the corresponding key
value encrypted under a transport key.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="UniqueID" type="gpm:uniqueID" use="required">
				<xsd:annotation>
					<xsd:documentation>UniqueID of the Key Profile being
supplied.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="KeyValue" type="xsd:hexBinary"/>
			<xsd:attribute name="TransportKeyUniqueID" type="gpm:uniqueID" use="optional"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="LFP">
		<xsd:annotation>
			<xsd:documentation>For an UniqueID value specified, returns the corresponding Load
File Profile.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpp:LoadFileProfile"/>
				<xsd:element ref="gpm:ProfileIdentification"/>
			</xsd:sequence>
			<xsd:attribute name="UniqueID" type="gpm:uniqueID" use="required">
				<xsd:annotation>
					<xsd:documentation>UniqueID of the Load File Profile being
supplied.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:attributeGroup name="SpecificCardID">
		<xsd:annotation>
			<xsd:documentation>Fields used to identify a specific smart
card.</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="CRN" use="optional">
			<xsd:annotation>
				<xsd:documentation>Off-card CAMS Reference Number associating the issued smart
card with a customer.</xsd:documentation>
				<xsd:documentation>Used usually for CardProfile</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="AID" use="optional">
			<xsd:annotation>
				<xsd:documentation>Used for LoadfileProfile</xsd:documentation>
				<xsd:documentation/>
				<xsd:documentation/>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="KeyID" use="optional">
			<xsd:annotation>
				<xsd:documentation>Used for KeyProfile</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="LoadFileName" use="optional">
			<xsd:annotation>
				<xsd:documentation>Used for LoadfileProfile</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="OtherIDFieldLabel" use="optional">
			<xsd:annotation>
				<xsd:documentation>Required to identify the field used to identify a specific
smart card.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="OtherIDFieldValue" use="optional">
			<xsd:annotation>
				<xsd:documentation>Required to identify a specific smart card based on the
SmartCardIDField.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>
	<!-- Version 2.0.1: Begin update -->
	<xsd:simpleType name="messageType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="AP"/>
			<xsd:enumeration value="CP"/>
			<xsd:enumeration value="CP_CHANGES"/>
			<xsd:enumeration value="KP"/>
			<xsd:enumeration value="KEY_EXCHANGE"/>
			<xsd:enumeration value="LFP"/>
			<xsd:enumeration value="PROFILE_REQUEST"/>
			<xsd:enumeration value="BATCH_CARD_CUSTOMIZATION"/>
			<xsd:enumeration value="CARD_CUSTOMIZATION"/>
			<xsd:enumeration value="DATA_PREPARATION_REQUEST"/>
			<xsd:enumeration value="APP_DATA_NOTIFICATION"/>
			<xsd:enumeration value="BATCH_AUDIT_TRAIL"/>
			<xsd:enumeration value="CARD_AUDIT_TRAIL"/>
			<xsd:enumeration value="APPLICATION_AUDIT_TRAIL"/>
			<xsd:enumeration value="ERROR"/>
			<xsd:enumeration value="MIXED"/>
			<xsd:enumeration value="GetDeviceCapabilityProfileIdRequest"/>
			<xsd:enumeration value="GetDeviceCapabilityProfileIdResponse"/>
			<xsd:enumeration value="GetSECapabilityProfileIdRequest"/>
			<xsd:enumeration value="GetSECapabilityProfileIdResponse"/>
			<xsd:enumeration value="CheckMobileSubscriptionEligibilityRequest"/>
			<xsd:enumeration value="CheckMobileSubscriptionEligibilityResponse"/>
			<xsd:enumeration value="HandleStartServiceStateChangeNotificationRequest"/>
			<xsd:enumeration value="HandleEndServiceStateChangeNotificationRequest"/>
			<xsd:enumeration value="GetMobileSubscriptionAlternateIdentifierRequest"/>
			<xsd:enumeration value="GetMobileSubscriptionAlternateIdentifierResponse"/>
			<xsd:enumeration value="GetSEMobileSubscriptionIdentifierRequest"/>
			<xsd:enumeration value="GetSEMobileSubscriptionIdentifierResponse"/>
			<xsd:enumeration value="HandleMobileSubscriptionIdentifierChangedNotificationRequest"/>
			<xsd:enumeration value="HandleMobileSubscriptionStatusChangeNotificationRequest"/>
			<xsd:enumeration value="HandleSERenewalNotificationRequest"/>
			<xsd:enumeration value="HandleSEDeviceChangedNotificationRequest"/>
			<xsd:enumeration value="HandleSEMobileSubscriptionChangedNotificationRequest"/>
			<xsd:enumeration value="HandleSEStatusChangeNotificationRequest"/>
			<xsd:enumeration value="EnrollSSDOwnerCertificateRequest"/>
			<xsd:enumeration value="EnrollSSDOwnerCertificateResponse"/>
			<xsd:enumeration value="GetCAInformationRequest"/>
			<xsd:enumeration value="GetCAInformationResponse"/>
			<xsd:enumeration value="SECommandsGenerationAndRemoteExecutionRequest"/>
			<xsd:enumeration value="SECommandsGenerationAndRemoteExecutionResponse"/>
			<xsd:enumeration value="GenerateDMTokenRequest"/>
			<xsd:enumeration value="GenerateDMTokenResponse"/>
			<xsd:enumeration value="VerifyDMReceiptRequest"/>
			<xsd:enumeration value="VerifyDMReceiptResponse"/>
			<xsd:enumeration value="BeginConversationRequest"/>
			<xsd:enumeration value="BeginConversationResponse"/>
			<xsd:enumeration value="SendScriptRequest"/>
			<xsd:enumeration value="SendScriptResponse"/>
			<xsd:enumeration value="EndConversationRequest"/>
			<xsd:enumeration value="EndConversationResponse"/>
			<xsd:enumeration value="GetApplicationOrELFStatusRequest"/>
			<xsd:enumeration value="GetApplicationOrELFStatusResponse"/>
			<xsd:enumeration value="LoadSCWSServicePortalRequest"/>
			<xsd:enumeration value="LoadSCWSServicePortalResponse"/>
			<xsd:enumeration value="DeleteSCWSServicePortalRequest"/>
			<xsd:enumeration value="DeleteSCWSServicePortalResponse"/>
			<xsd:enumeration value="LoadDeviceApplicationRequest"/>
			<xsd:enumeration value="LoadDeviceApplicationResponse"/>
			<xsd:enumeration value="BindDeviceApplicationToSEApplicationRequest"/>
			<xsd:enumeration value="BindDeviceApplicationToSEApplicationResponse"/>
			<xsd:enumeration value="DeleteDeviceApplicationRequest"/>
			<xsd:enumeration value="DeleteDeviceApplicationResponse"/>
			<xsd:enumeration value="UnbindDeviceApplicationToSEApplicationRequest"/>
			<xsd:enumeration value="UnbindDeviceApplicationToSEApplicationResponse"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Version 2.0.1: End update -->
	<xsd:simpleType name="uniqueID">
		<xsd:restriction base="xsd:hexBinary"/>
	</xsd:simpleType>
	<xsd:simpleType name="OID">
		<xsd:restriction base="xsd:hexBinary"/>
	</xsd:simpleType>
	<xsd:element name="ProfileIdentification">
		<xsd:complexType>
			<xsd:attributeGroup ref="gpm:SpecificCardID"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ProfileRequest">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:ProfileIdentification" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="type" type="gpm:profileType" use="required"/>
			<xsd:attribute name="ProfileUniqueID" type="gpm:uniqueID" use="optional"/>
			<xsd:attribute name="ProfileVersion" type="gpp:version" use="optional"/>
			<xsd:attribute name="AssociateProfiles" type="xsd:boolean" use="optional" default="false">
				<xsd:annotation>
					<xsd:documentation>If Yes all the associated profiles will be returned
to the requester (e.g. if request is for a card profile, all the related application
profiles and loadfile profiles will be returned)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:simpleType name="BatchID">
		<xsd:annotation>
			<xsd:documentation>An ASCII field to identify the batch of jobs between the SCMS
and the Personalization environment. E.g. SCMS ID + Transaction Sequence Number. This
information is required by the collator in order to identify XML messages coming from
different entities but related to the same batch</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name="profileType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="AP"/>
			<xsd:enumeration value="CP"/>
			<xsd:enumeration value="CP_CHANGES"/>
			<xsd:enumeration value="KP"/>
			<xsd:enumeration value="KEY_EXCHANGE"/>
			<xsd:enumeration value="LFP"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="CIN">
		<xsd:annotation>
			<xsd:documentation>Card Image Number</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="Number" type="xsd:hexBinary" use="required"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="KeyID">
		<xsd:annotation>
			<xsd:documentation>Key Identifier</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="ID" type="xsd:hexBinary" use="required"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="LoadFileName">
		<xsd:complexType>
			<xsd:attribute name="FileName" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="MuteCardsNumber" type="xsd:short"/>
	<xsd:element name="ScriptFragment" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>- Script fragment name as defined in GP Application Profile (if
GP profile and scripting is used)
- Script code for other cases
Renamed for version 2.0.0 to avoid naming conflict: Script --> ScriptFragment</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Address">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="StreetAddress" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="City" minOccurs="0"/>
				<xsd:element name="State" minOccurs="0"/>
				<xsd:element name="Zip" minOccurs="0"/>
				<xsd:element name="Country" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PhoneNumber"/>
	<xsd:element name="eMail"/>
	<xsd:element name="URL"/>
	<xsd:element name="Person">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="FirstName"/>
				<xsd:element name="MiddleName" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="LastName"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FaxNumber"/>
	<xsd:element name="Entity">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Address" minOccurs="0"/>
				<xsd:element name="Contact" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence maxOccurs="unbounded">
							<xsd:choice>
								<xsd:element ref="gpm:Person" minOccurs="0"/>
								<xsd:element ref="gpm:PhoneNumber" minOccurs="0" maxOccurs="unbounded"/>
								<xsd:element ref="gpm:FaxNumber" minOccurs="0" maxOccurs="unbounded"/>
								<xsd:element ref="gpm:eMail" minOccurs="0" maxOccurs="unbounded"/>
								<xsd:element ref="gpm:URL" minOccurs="0" maxOccurs="unbounded"/>
								<xsd:element ref="gpm:Information" minOccurs="0"/>
							</xsd:choice>
						</xsd:sequence>
						<xsd:attribute name="Name" type="xsd:string" use="optional"/>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Name" use="optional"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="EntityID">
		<xsd:complexType>
			<xsd:attribute name="Type"/>
			<xsd:attribute name="Encoding"/>
			<xsd:attribute name="Value"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CPP">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpp:CardPrintingProfile"/>
				<xsd:element ref="gpm:ProfileIdentification"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Information">
		<xsd:complexType>
			<xsd:attribute name="Comment" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="GenericModule">
		<xsd:annotation>
			<xsd:documentation>An identifier that specifies that this is data for Card Module
application(s). An ASCII character field matching current personalization standards for
identifying the type of data that follows. The length and values of this field are
established when the personalization device is configured. Renamed for version 2.0.0 to avoid naming conflict: Module --> GenericModule</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:ProfileUniqueID"/>
				<xsd:element ref="gpm:ProcessingStep" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="gpm:LogData" minOccurs="0"/>
				<xsd:element ref="gpm:ModuleData" minOccurs="0"/>
				<xsd:element ref="ds:Signature" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="ModuleName" type="gpm:ModuleNameType" use="required"/>
			<xsd:attribute name="Identifier" type="xsd:string"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ShippingInformation">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Data" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DeliveryModule">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:EntityID" minOccurs="0"/>
				<xsd:element ref="gpm:Entity" minOccurs="0"/>
				<xsd:element ref="gpm:RequestedDeliveryDate" minOccurs="0"/>
				<xsd:element ref="gpm:ShippingInformation" minOccurs="0"/>
				<xsd:element ref="gpm:PackagingInformation" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="RequestedDeliveryDate">
		<xsd:complexType>
			<xsd:attribute name="RequestedDeliveryDate"/>
			<xsd:attribute name="ExpectedCommitDate"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ProfileUniqueID" type="gpm:uniqueID"/>
	<xsd:element name="ModuleData">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:DataSet" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:simpleType name="ModuleNameType" final="list">
		<xsd:restriction base="xsd:string"/>
	</xsd:simpleType>
	<xsd:element name="PackagingInformation">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Data" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="MessageContext">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Data" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ModulesCommonData">
		<xsd:annotation>
			<xsd:documentation>Commom data cross Modules </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:DataSet" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ModuleLog">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Error" minOccurs="0"/>
				<xsd:element ref="gpm:ProfileUniqueID" minOccurs="0"/>
				<xsd:element ref="gpm:ProcessingStepResult" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="gpm:LogData" minOccurs="0"/>
				<xsd:element ref="ds:Signature" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="ModuleName" type="gpm:ModuleNameType" use="required"/>
			<xsd:attribute name="Identifier" type="xsd:string"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ExpectedDeliveryDate"/>
	<xsd:element name="DeliveryDate"/>
	<xsd:element name="DeliveryModuleLog">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="gpm:Error" minOccurs="0"/>
				<xsd:element ref="gpm:EntityID" minOccurs="0"/>
				<xsd:element ref="gpm:Entity" minOccurs="0"/>
				<xsd:element ref="gpm:RequestedDeliveryDate" minOccurs="0"/>
				<xsd:element ref="gpm:ExpectedDeliveryDate" minOccurs="0"/>
				<xsd:element ref="gpm:DeliveryDate" minOccurs="0"/>
				<xsd:element ref="gpm:ShippingInformation" minOccurs="0"/>
				<xsd:element ref="gpm:PackagingInformation" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<!-- =========================== -->
	<!-- Version 2.0.0: Begin update -->
	<!-- =========================== -->
	<!-- Common types -->
	<!-- ============ -->
	<xsd:complexType name="ExtensionsType">
		<xsd:sequence>
			<xsd:any namespace="##other" processContents="lax" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Extension point.</xsd:documentation>
				</xsd:annotation>
			</xsd:any>
		</xsd:sequence>
		<xsd:attribute name="Definition" type="xsd:anyURI" use="optional"/>
	</xsd:complexType>
	<!-- Simple identifier types -->
	<xsd:simpleType name="CardUniqueDataType">
		<xsd:annotation>
			<xsd:documentation>The Card Unique Data used to identify a Secure Element. Card Unique Data is build based on the IIN (Issuer Identification Number) and the CIN (Card Identification Number).
Format is: Hexadecimal string representation of IIN + CIN concatenated, up to 16 bytes.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="([0-9a-fA-F]{2}){1,16}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Version 2.0.1: Begin update -->
	<xsd:simpleType name="ICCIDType">
		<xsd:annotation>
			<xsd:documentation>The ICCID (Integrated Circuit Card IDentifier) used to identify a Secure Element.
Format: String representation of up to 20 hexadecimal digits.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="89[0-9a-fA-F]{6,18}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Version 2.0.1: End update -->
	<xsd:simpleType name="MSISDNType">
		<xsd:annotation>
			<xsd:documentation>The MSISDN (Mobile Station ISDN Number) used to identify a Mobile Subscription.
String representation of up to 15 decimal digits as defined in ITU E.164</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="\d{3,15}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="AliasType">
		<xsd:annotation>
			<xsd:documentation>The Alias used to identify a Mobile Subscription. An Alias is a free string that may be used in place of another identifier (such as the MSISDN) to identify a Mobile Subscription, for example to prevent from legal issues of using the original identifier all over the system (which might be considered as a private information, for example).
Format: Alphanumeric string of up to 255 characters. Allowed characters: 'A' to 'Z', 'a' to 'z', '0' to '9'.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="255"/>
			<xsd:minLength value="1"/>
			<xsd:pattern value="[0-9a-zA-Z]*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="AIDType">
		<xsd:annotation>
			<xsd:documentation>The AID (Application IDentifier) of an Executable Load File, an Executable Module, a Security Domain, or an Application.
Format: Hexadecimal string representation of 5 to 16 bytes.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="([0-9a-fA-F]{2}){5,16}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="TARType">
		<xsd:annotation>
			<xsd:documentation>The TAR (Toolkit Application Reference) of a Security Domain or an Application.
Format: Hexadecimal string representation of exactly 3 bytes.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="([0-9a-fA-F]{2}){1,3}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="SEApplicationIdentifierType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Base type for SE Application identifier. Can for example be an AID or a TAR.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
	</xsd:complexType>
	<xsd:complexType name="SEAppId_AIDType">
		<xsd:annotation>
			<xsd:documentation>AID as SE Application identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SEApplicationIdentifierType">
				<xsd:sequence>
					<xsd:element name="AID" type="gpm:AIDType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SEAppId_TARType">
		<xsd:annotation>
			<xsd:documentation>TAR as SE Application identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SEApplicationIdentifierType">
				<xsd:sequence>
					<xsd:element name="TAR" type="gpm:TARType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="DeviceApplicationIdentifierType">
		<xsd:annotation>
			<xsd:documentation>The identifier used to identify a Device Application.
Format: Alphanumeric string of up to 255 characters. Allowed characters: 'A' to 'Z', 'a' to 'z', '0' to '9'.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="255"/>
			<xsd:minLength value="1"/>
			<xsd:pattern value="[0-9a-zA-Z]*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="SCWSPortalIdentifierType">
		<xsd:annotation>
			<xsd:documentation>The identifier used to identify a SCWS service portal.
Format: Alphanumeric string of up to 255 characters. Allowed characters: 'A' to 'Z', 'a' to 'z', '0' to '9'.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="255"/>
			<xsd:minLength value="1"/>
			<xsd:pattern value="[0-9a-zA-Z]*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="APDUType">
		<xsd:annotation>
			<xsd:documentation>The APDU type</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:hexBinary">
			<xsd:maxLength value="32768"/>
			<xsd:minLength value="4"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Version 2.0.1: Begin update -->
	<xsd:simpleType name="APDUResponseType">
		<xsd:annotation>
			<xsd:documentation>The APDU response type</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:hexBinary">
			<xsd:maxLength value="32768"/>
			<xsd:minLength value="2"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Version 2.0.1: End update -->
	<xsd:simpleType name="ObjectIdentifierType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="([0-9]+\.)*[0-9]+"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Complex identifiers -->
	<xsd:complexType name="MobileSubscriptionIdentifierType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>The Mobile Subscription identifier. A Mobile Subscription can for example be identified either by a MSISDN or an Alias for a particular MNO, but it can be extended to other type of identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="MNOName" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The name of the Mobile Network Operator that delivered the Mobile Subscription.
Note that the MNO Name might be the name of a Virtual MNO (MVNO).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="MSId_MSISDNType">
		<xsd:annotation>
			<xsd:documentation>MSISDN as Mobile Subscription Identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:MobileSubscriptionIdentifierType">
				<xsd:sequence>
					<xsd:element name="MSISDN" type="gpm:MSISDNType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="MSId_AliasType">
		<xsd:annotation>
			<xsd:documentation>Alias as Mobile Subscription Identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:MobileSubscriptionIdentifierType">
				<xsd:sequence>
					<xsd:element name="Alias" type="gpm:AliasType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="MSId_GenericType">
		<xsd:annotation>
			<xsd:documentation>Generic Mobile Subscription Identifier, may be used for any type of Mobile Subscription Identifier that is defined through a single String. "Type" of the identifier may be optionally also to be provided.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:MobileSubscriptionIdentifierType">
				<xsd:sequence>
					<xsd:element name="Id" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription identifier value.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="Type" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>The type of the identifier used to identify the Mobile Subscription.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="MSId_ExtendableType">
		<xsd:annotation>
			<xsd:documentation>Extendable Mobile Subscription Identifier, i.e. may be used for any type of Mobile Subscription Identifier that does not match other pre-defined types.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:MobileSubscriptionIdentifierType">
				<xsd:sequence>
					<xsd:any namespace="##other" processContents="lax" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Extension point.</xsd:documentation>
						</xsd:annotation>
					</xsd:any>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SEIdentifierType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>The Secure Element identifier. A Secure Element can for example be identified either by a Card Unique Data or an ICCID, but it can be extended to other type of identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
	</xsd:complexType>
	<xsd:complexType name="SEId_CardUniqueDataType">
		<xsd:annotation>
			<xsd:documentation>Card Unique Date as Secure Element Identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SEIdentifierType">
				<xsd:sequence>
					<xsd:element name="CardUniqueData" type="gpm:CardUniqueDataType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SEId_ICCIDType">
		<xsd:annotation>
			<xsd:documentation>ICCID as Secure Element Identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SEIdentifierType">
				<xsd:sequence>
					<xsd:element name="ICCID" type="gpm:ICCIDType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SEId_GenericType">
		<xsd:annotation>
			<xsd:documentation>Generic Secure Element Identifier, may be used for any type of Secure Element Identifier that is defined through a single String. "Type" of the identifier may be optionally also to be provided.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SEIdentifierType">
				<xsd:sequence>
					<xsd:element name="Id" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The Secure Element identifier value.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="Type" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>The type of the identifier used to identify the Secure Element</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SEId_ExtendableType">
		<xsd:annotation>
			<xsd:documentation>Extendable Secure Element Identifier, i.e. may be used for any type of Secure Element Identifier that does not match other pre-defined types.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SEIdentifierType">
				<xsd:sequence>
					<xsd:any namespace="##other" processContents="lax" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Extension point.</xsd:documentation>
						</xsd:annotation>
					</xsd:any>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ServiceVersionType">
		<xsd:annotation>
			<xsd:documentation>The mobile-NFC service version.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="MajorVersion" type="xsd:nonNegativeInteger">
				<xsd:annotation>
					<xsd:documentation>The major version of the service.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="MinorVersion" type="xsd:nonNegativeInteger">
				<xsd:annotation>
					<xsd:documentation>The minor version of the service.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="RevisionVersion" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The revision version of the service.
If not present, it implicitly corresponds to the latest revision of the "major.minor" version.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ServiceIdentifierType">
		<xsd:annotation>
			<xsd:documentation>The mobile-NFC service identifier.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="ServiceId" type="xsd:positiveInteger">
				<xsd:annotation>
					<xsd:documentation>The technical identifier of the service.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ServiceVersion" type="gpm:ServiceVersionType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The  version of the service.
If not present, it implicitly corresponds to the latest  version of the service.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ServiceQualifierType">
		<xsd:annotation>
			<xsd:documentation>Additional information that qualifies the mobile-NFC service.
For instance, it may be used when a service is multi-instantiated, to uniquely identify the particular instance that is under installation, and later, for post-delivery actions, to identify the particular instance that is to be locked, unlocked, or deleted.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Qualifier" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Additional information that qualifies the mobile-NFC service.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Extensions" type="gpm:ExtensionsType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- Header elements -->
	<!-- =============== -->
	<xsd:complexType name="BasicRequestType">
		<xsd:annotation>
			<xsd:documentation>The base type for a Request types.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="FunctionCallIdentifier" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Identification of the function call. This identifier enables to manage function call retry policies.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ValidityPeriod" type="xsd:positiveInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Defines the length of the period (provided as a number of seconds) during which the request is valid. The period starts at the time the function call was received by the function provider and ends a number of seconds later.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Extensions" type="gpm:ExtensionsType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="BasicResponseType">
		<xsd:annotation>
			<xsd:documentation>The base type for a Response types.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="ProcessingStart" type="xsd:dateTime" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The start time and date of the real processing of the function by the function provider (and not the time and date of reception of the request).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ProcessingEnd" type="xsd:dateTime" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The function processing end time and date.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="AcceptableValidityPeriod" type="xsd:positiveInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>In case the validity period provided as input parameter is not acceptable, then the function provider SHALL return an acceptable value to the function caller.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="FunctionExecutionStatus" type="gpm:ExecutionStatusType">
				<xsd:annotation>
					<xsd:documentation>Indicates whether the function has been processed correctly or not. If required, provides information to give details on the processing result (status code, status data, status message)</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Extensions" type="gpm:ExtensionsType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ExecutionStatusType">
		<xsd:annotation>
			<xsd:documentation>Indicates whether the execution of a processing has been completed correctly or not and provides information to give details on the processing result (status code, status data, status message)</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Status" type="gpm:StatusType">
				<xsd:annotation>
					<xsd:documentation>It indicates whether the processing has been completed correctly or not.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="StatusCodeData" type="gpm:StatusCodeDataType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>It provides the reason of the Status value.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="StatusCodeDataType">
		<xsd:annotation>
			<xsd:documentation>It provides the reason of the Status value. Present only if the "Status" is 'Execute-WithWarning', 'Failed', or 'Expired'. </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Subject" type="gpm:ObjectIdentifierType">
				<xsd:annotation>
					<xsd:documentation>Represents the system element concerned by the exception.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Reason" type="gpm:ObjectIdentifierType">
				<xsd:annotation>
					<xsd:documentation>Represents the reason of the exception.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="SubjectIdentifier" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The identifier of the subject or any identification data of the subject that caused the exception (e.g. AID of the instance when the Subject is an "Application instance"). The possible values of the Subject Identifier depend on the function and may be implementation dependant.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Message" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>It provides a textual and human readable explanation of the exception. The Message value is implementation dependant.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="StatusType">
		<xsd:annotation>
			<xsd:documentation>It indicates whether the processing has been completed correctly or not.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="EXECUTED_SUCCESS"/>
			<xsd:enumeration value="EXECUTED_WITHWARNING"/>
			<xsd:enumeration value="FAILED"/>
			<xsd:enumeration value="EXPIRED"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Control functions -->
	<!-- ~~~~~~~~~~~~~~~~~ -->
	<!-- Eligibility check -->
	<xsd:complexType name="GetDeviceCapabilityProfileIdRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for the identifier of a Device profile that gives information about the Device currently associated to a particular Mobile Subscription. This profile enables to know the various capabilities of the Device.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the Device is accessible.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetDeviceCapabilityProfileIdResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the GetDeviceCapabilityProfileIdRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="DeviceCapabilityProfileId" type="xsd:positiveInteger">
				<xsd:annotation>
					<xsd:documentation>The pre-defined Profile Identifier for Device capabilities.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="GetDeviceCapabilityProfileIdResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the GetDeviceCapabilityProfileIdRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:GetDeviceCapabilityProfileIdResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="GetDeviceCapabilityProfileIdRequest" type="gpm:GetDeviceCapabilityProfileIdRequestType"/>
	<xsd:element name="GetDeviceCapabilityProfileIdResponse" type="gpm:GetDeviceCapabilityProfileIdResponseType"/>
	<xsd:complexType name="GetSECapabilityProfileIdRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for the identifier of a SE profile that gives information about the SE. This profile enables to know the various capabilities of the Secure Element.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element into which the mobile-NFC service is deployed/under deployment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetSECapabilityProfileIdResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the GetSECapabilityProfileIdRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="SECapabilityProfileId" type="xsd:positiveInteger">
				<xsd:annotation>
					<xsd:documentation>The pre-defined Profile Identifier for SE capabilities.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="GetSECapabilityProfileIdResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the GetSECapabilityProfileIdRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:GetSECapabilityProfileIdResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="GetSECapabilityProfileIdRequest" type="gpm:GetSECapabilityProfileIdRequestType"/>
	<xsd:element name="GetSECapabilityProfileIdResponse" type="gpm:GetSECapabilityProfileIdResponseType"/>
	<xsd:complexType name="CheckMobileSubscriptionEligibilityRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for the eligibility of the Mobile Subscription to the to-be-delivered mobile-NFC service. This check is useful to know if the Mobile Subscription is allowed to have a data plan and if the Mobile Subscription is setup to enable NFC services.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription to check.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Service" type="gpm:ServiceIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CheckMobileSubscriptionEligibilityResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the CheckMobileSubscriptionEligibilityRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Eligible" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation>If the subscription is eligible for use, in the context of deployment of the particular mobile-NFC service.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="NonEligibilityReason" type="xsd:integer" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The reason of non-eligibility. Reasons are business process dependent. Present only if Eligible is set to False.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CheckMobileSubscriptionEligibilityResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the CheckMobileSubscriptionEligibilityRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:CheckMobileSubscriptionEligibilityResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="CheckMobileSubscriptionEligibilityRequest" type="gpm:CheckMobileSubscriptionEligibilityRequestType"/>
	<xsd:element name="CheckMobileSubscriptionEligibilityResponse" type="gpm:CheckMobileSubscriptionEligibilityResponseType"/>
	<!-- AID generation -->
	<!--    -> No message -->
	<!-- Service management life cycle notifications -->
	<xsd:simpleType name="OperationType">
		<xsd:annotation>
			<xsd:documentation>The type of operation performed on the mobile-NFC service. The following values are pre-defined:
1-Service deployment, 2-Service upgrade, 3-Service update, 4-Service locking, 5-Service unlocking, 6-Service removal</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:positiveInteger"/>
	</xsd:simpleType>
	<xsd:complexType name="HandleStartServiceStateChangeNotificationRequestType">
		<xsd:annotation>
			<xsd:documentation>Notifies the start of a global operation on a particular instance of mobile-NFC service.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the mobile-NFC service is accessible.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Secure Element into which the mobile-NFC service is deployed/under deployment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="CurrentService" type="gpm:ServiceIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The current mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="CurrentServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the current mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="NewService" type="gpm:ServiceIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new mobile-NFC service, in case of service deployment and upgrade.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="NewServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the new mobile-NFC service, in case of service deployment and upgrade.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Operation" type="gpm:OperationType">
						<xsd:annotation>
							<xsd:documentation>The operation to be tracked.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="HandleStartServiceStateChangeNotificationRequest" type="gpm:HandleStartServiceStateChangeNotificationRequestType"/>
	<xsd:complexType name="HandleEndServiceStateChangeNotificationRequestType">
		<xsd:annotation>
			<xsd:documentation>Notifies the end of a global operation on a particular instance of mobile-NFC service.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the mobile-NFC service is accessible.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Secure Element into which the mobile-NFC service is deployed/under deployment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="CurrentService" type="gpm:ServiceIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The current mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="CurrentServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the current mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="NewService" type="gpm:ServiceIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new mobile-NFC service, in case of service deployment and upgrade.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="NewServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the new mobile-NFC service, in case of service deployment and upgrade.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Operation" type="gpm:OperationType">
						<xsd:annotation>
							<xsd:documentation>The operation to be tracked.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="OperationStatus" type="gpm:ExecutionStatusType">
						<xsd:annotation>
							<xsd:documentation>The status of the operation performed on the instance of the service.
The Execution Status type is re-used to specify the result of processing of the operation, and optionally to provide information on any encountered problem (status code, , data/object that causes the status code, and message to provide textual and human readable explanation of the status code).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="HandleEndServiceStateChangeNotificationRequest" type="gpm:HandleEndServiceStateChangeNotificationRequestType"/>
	<!-- Mobile Subscription life cycle -->
	<xsd:complexType name="GetMobileSubscriptionAlternateIdentifierRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for an alternate identifier of a Mobile Subscription. This function might be used for example to get an Alias of the given Mobile Subscription identifer.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="MobileSubscriptionIdentifier" type="gpm:MobileSubscriptionIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription identifier.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Service" type="gpm:ServiceIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetMobileSubscriptionAlternateIdentifierResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the GetMobileSubscriptionAlternateIdentifierRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="AlternateMobileSubscriptionIdentifier" type="gpm:MobileSubscriptionIdentifierType">
				<xsd:annotation>
					<xsd:documentation>The alternate Mobile Subscription identifier to be used in any further function calls taking a Mobile Subscription identifier as input parameter (in place of the former Mobile Subscription identifier value).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="GetMobileSubscriptionAlternateIdentifierResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the GetMobileSubscriptionAlternateIdentifierRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:GetMobileSubscriptionAlternateIdentifierResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="GetMobileSubscriptionAlternateIdentifierRequest" type="gpm:GetMobileSubscriptionAlternateIdentifierRequestType"/>
	<xsd:element name="GetMobileSubscriptionAlternateIdentifierResponse" type="gpm:GetMobileSubscriptionAlternateIdentifierResponseType"/>
	<xsd:complexType name="GetSEMobileSubscriptionIdentifierRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for the identifier of the Mobile Subscription that shall be used to target a particular Secure Element.
This function might be used by the SDM in case the Mobile Subscription identifier is not known by itself, or has not been provided by the AP or by another SDM.
</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element into which the mobile-NFC service is deployed/under deployment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetSEMobileSubscriptionIdentifierResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the GetSEMobileSubscriptionIdentifierRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="MobileSubscriptionIdentifier" type="gpm:MobileSubscriptionIdentifierType">
				<xsd:annotation>
					<xsd:documentation>The Mobile Subscription identifier to be used to reach the Secure Element.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="GetSEMobileSubscriptionIdentifierResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the GetSEMobileSubscriptionIdentifierRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:GetSEMobileSubscriptionIdentifierResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="GetSEMobileSubscriptionIdentifierRequest" type="gpm:GetSEMobileSubscriptionIdentifierRequestType"/>
	<xsd:element name="GetSEMobileSubscriptionIdentifierResponse" type="gpm:GetSEMobileSubscriptionIdentifierResponseType"/>
	<xsd:complexType name="HandleMobileSubscriptionIdentifierChangedNotificationRequestType">
		<xsd:annotation>
			<xsd:documentation>Notifies that the identification of the Mobile Subscription has changed. Note that the Mobile Subscription itself is still the same; it is only the identifier which has changed. This new identifier SHALL be used for any later function call taking a Mobile Subscription Identifier as input parameter (in place of the former Mobile Subscription Identifier value).</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="MobileSubscriptionOldIdentifier" type="gpm:MobileSubscriptionIdentifierType">
						<xsd:annotation>
							<xsd:documentation>Old identifier of the Mobile Subscription.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="MobileSubscriptionNewIdentifier" type="gpm:MobileSubscriptionIdentifierType">
						<xsd:annotation>
							<xsd:documentation>New identifier of the Mobile Subscription.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="HandleMobileSubscriptionIdentifierChangedNotificationRequest" type="gpm:HandleMobileSubscriptionIdentifierChangedNotificationRequestType"/>
	<xsd:simpleType name="MobileSubscriptionStatusType">
		<xsd:annotation>
			<xsd:documentation>The status of the Mobile Subscription.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="SUSPENDED"/>
			<xsd:enumeration value="ACTIVATED"/>
			<xsd:enumeration value="RESTRICTED"/>
			<xsd:enumeration value="TERMINATED"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="MobileSubscriptionStatusChangeReasonType">
		<xsd:annotation>
			<xsd:documentation>The possible reasons of the suspension, activation, restriction or termination of a Mobile Subscription. The following values are pre-defined, but other values may be defined:
- For suspension, restriction and termination: 1-Subscription suspended, 2-Subscription restricted, 3-Subscription terminated, 11-NFC suspended, 12-NFC terminated, 21-Theft, 22-Lost, 23-Lost or Theft (in case the notifier cannot differentiate Theft and Lost process)
- For reactivation: 101-Subscription restored, 111-NFC restored, 121-Recovered (following theft or lost)</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:positiveInteger"/>
	</xsd:simpleType>
	<xsd:complexType name="HandleMobileSubscriptionStatusChangeNotificationRequestType">
		<xsd:annotation>
			<xsd:documentation>Notifies of a global status change on the Mobile Subscription. Four possible statuses may be notified: Suspended, Activated, Terminated, Restricted.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Date" type="xsd:dateTime" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The date when the suspension, activation, restriction or termination has been or will be done.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="NewStatus" type="gpm:MobileSubscriptionStatusType">
						<xsd:annotation>
							<xsd:documentation>The new status of the Mobile Subscription.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Reason" type="gpm:MobileSubscriptionStatusChangeReasonType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The reason of the suspension, activation, restriction or termination of the Mobile Subscription.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="HandleMobileSubscriptionStatusChangeNotificationRequest" type="gpm:HandleMobileSubscriptionStatusChangeNotificationRequestType"/>
	<!-- Secure Element life cycle notifications -->
	<xsd:complexType name="HandleSERenewalNotificationRequestType">
		<xsd:annotation>
			<xsd:documentation>Notifies that the Secure Element has been renewed. Renewal means that the previous Secure Element is no longer alive and accessible.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="OldSecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The identifier of the old Secure Element</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="NewSecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The identifier of the new Secure Element.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="HandleSERenewalNotificationRequest" type="gpm:HandleSERenewalNotificationRequestType"/>
	<xsd:complexType name="HandleSEDeviceChangedNotificationRequestType">
		<xsd:annotation>
			<xsd:documentation>Notifies that the Device hosting the SE has changed.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the Secure Element is accessible.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="OldDeviceCapabilityProfileId" type="xsd:positiveInteger">
						<xsd:annotation>
							<xsd:documentation>The identifier of the profile of the old Device the SE was inserted in.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="NewDeviceCapabilityProfileId" type="xsd:positiveInteger">
						<xsd:annotation>
							<xsd:documentation>The identifier of the profile of the new Device into which the SE has been inserted.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="HandleSEDeviceChangedNotificationRequest" type="gpm:HandleSEDeviceChangedNotificationRequestType"/>
	<xsd:complexType name="HandleSEMobileSubscriptionChangedNotificationRequestType">
		<xsd:annotation>
			<xsd:documentation>Notifies that the Mobile Subscription that is used for reaching by OTA the Secure Element and the Device has changed. It does not refer to a change of the identifier of the Mobile Subscription (notified by the HandleMobileSubscriptionIdentifierChangedNotification function); but, it really refers to a change of the Mobile Subscription itself.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="OldMobileSubscription" type="gpm:MobileSubscriptionIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The old Mobile Subscription the Secure Element was accessible through.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="NewMobileSubscription" type="gpm:MobileSubscriptionIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The new Mobile Subscription the Secure Element is now accessible through.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="HandleSEMobileSubscriptionChangedNotificationRequest" type="gpm:HandleSEMobileSubscriptionChangedNotificationRequestType"/>
	<xsd:simpleType name="SecureElementStatusType">
		<xsd:annotation>
			<xsd:documentation>The status of the Secure Element</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="SUSPENDED"/>
			<xsd:enumeration value="ACTIVATED"/>
			<xsd:enumeration value="TERMINATED"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="SEStatusChangeReasonType">
		<xsd:annotation>
			<xsd:documentation>The possible reasons of the suspension, activation or termination of a SE. The following values are pre-defined, but other values may be defined:
- For suspension and termination: 11-NFC suspended, 21-Theft, 22-Lost, 23-Lost or Theft (in case the notifier cannot differentiate Theft and Lost process)
- For reactivation: 111-NFC restored, 121-Recovered (following theft or lost)</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:positiveInteger"/>
	</xsd:simpleType>
	<xsd:complexType name="HandleSEStatusChangeNotificationRequestType">
		<xsd:annotation>
			<xsd:documentation>Notifies of a global status change on the Secure Element. Three possible statuses may be notified: Suspended, Activated, Terminated</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Date" type="xsd:dateTime" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The date when the suspension, activation or termination will be done.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="NewStatus" type="gpm:SecureElementStatusType">
						<xsd:annotation>
							<xsd:documentation>The new status of the Secure Element</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Reason" type="gpm:SEStatusChangeReasonType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The reason of the suspension, activation or termination of the SE.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="HandleSEStatusChangeNotificationRequest" type="gpm:HandleSEStatusChangeNotificationRequestType"/>
	<!-- Functions for the CCCM certificate management -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xsd:complexType name="EnrollSSDOwnerCertificateRequestType">
		<xsd:annotation>
			<xsd:documentation>This function enables a SSD owner to request for the enrollment of a certificate to the CA, for later confidential SSD key management. This function is based on RFC 2986, providing an ASN.1 CertificationRequest that is DER encoded.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="CertificationRequest" type="xsd:hexBinary">
						<xsd:annotation>
							<xsd:documentation>A DER encoded CertificationRequest according to RFC 2986.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="EnrollSSDOwnerCertificateResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the EnrollSSDOwnerCertificateRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="SSDOwnerCertificate" type="xsd:hexBinary">
				<xsd:annotation>
					<xsd:documentation>The certificate of the SSD owner. The format of this field is a byte array which content corresponds to the full content of tag '7F21' (including the two '7F21' bytes) defined in table 10-2 "Structure of AP Public Key Certificate with Message Recovery"  of the UICC Configuration document.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="EnrollSSDOwnerCertificateResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the EnrollSSDOwnerCertificateRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:EnrollSSDOwnerCertificateResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="EnrollSSDOwnerCertificateRequest" type="gpm:EnrollSSDOwnerCertificateRequestType"/>
	<xsd:element name="EnrollSSDOwnerCertificateResponse" type="gpm:EnrollSSDOwnerCertificateResponseType"/>
	<xsd:simpleType name="CCCMModeType">
		<xsd:annotation>
			<xsd:documentation>The possible CCCM modes.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Scenario 1-PK"/>
			<xsd:enumeration value="Scenario 1-Non PK"/>
			<xsd:enumeration value="Scenario 2A"/>
			<xsd:enumeration value="Scenario 2B"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="GetCAInformationRequestType">
		<xsd:annotation>
			<xsd:documentation>This function queries about information regarding the Controlling Authority Security Domain of a Secure Element. It gives the list of CCCM modes that are supported for key management and returns the CASD certificate of the SE. Note that despite the name, the function queries exclusively about information regarding the CASD.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element into which the mobile-NFC service is deployed/under deployment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the Secure Element is accessible.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetCAInformationResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the GetCAInformationRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="SupportedCCCMMode" type="gpm:CCCMModeType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>CCCM mode supported by the CA SD in the Secure Element. Several occurrence of this field enables to specify several supported modes. No occurrence means that no CA SD is present in the SE, or no CCCM mode is supported.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="CACertificate" type="xsd:hexBinary" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The CA SD certificate. The format of this field is a byte array which content corresponds to the full content of tag '7F21' (including the two '7F21' bytes) defined in table 9-4 "CASD Certificate Structure (Certificate with Message Recovery)" of the UICC Configuration document.
Only present if the Supported CCCM Mode is not "None".</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="GetCAInformationResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the GetCAInformationRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:GetCAInformationResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="GetCAInformationRequest" type="gpm:GetCAInformationRequestType"/>
	<xsd:element name="GetCAInformationResponse" type="gpm:GetCAInformationResponseType"/>
	<!-- Functions for the Secure Element management -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- SE Card Content Management functions for Simple mode -->
	<xsd:complexType name="SECommandType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Base type for command to be executed on the SE.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
	</xsd:complexType>
	<xsd:complexType name="SECommandResponseType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Base typ for responses to the SE Command to be executed on the SE.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
	</xsd:complexType>
	<xsd:simpleType name="KeyVersionNumberType">
		<xsd:annotation>
			<xsd:documentation>The Key Version Number of the to-be-created keyset. From '01' to '7F', i.e. 1 to 127.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:byte">
			<xsd:minInclusive value="1"/>
			<xsd:maxInclusive value="127"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="CreateFirstSSDKeysetCommandType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests the creation of the first keyset of a Supplementary Security Domain.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SECommandType">
				<xsd:sequence>
					<xsd:element name="SSDAID" type="gpm:AIDType">
						<xsd:annotation>
							<xsd:documentation>AID of the SSD into which keys are provisioned.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="KeyVersionNumber" type="gpm:KeyVersionNumberType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Key Version Number of the to-be-created keyset. From '01' to '7F', i.e. 1 to 127.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="InitialSequenceCounter" type="xsd:nonNegativeInteger" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The initial value of the Sequence Counter of the keyset.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="SDINType">
		<xsd:annotation>
			<xsd:documentation>The SSD's Security Domain Image Number.
Format: Hexadecimal string representation of up to 8 bytes.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="([0-9a-fA-F]{2}){1,8}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="SDKeyType">
		<xsd:annotation>
			<xsd:documentation>A SD key value</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="KeyIdentifier" type="xsd:byte">
				<xsd:annotation>
					<xsd:documentation>The Key Identifier within the keyset.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="EncryptedKeyValue" type="xsd:hexBinary">
				<xsd:annotation>
					<xsd:documentation>The key value, encrypted with the Transport Key.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="KeySetType">
		<xsd:annotation>
			<xsd:documentation>A SD keyset</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Key" type="gpm:SDKeyType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>The value of an individual key to be created within the keyset, encrypted by the transport key referenced by the Transport Key Index.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="TransportKeyIndex" type="xsd:nonNegativeInteger">
				<xsd:annotation>
					<xsd:documentation>The index of the transport key that has been used to cipher the Key value.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Basic_CreateFirstSSDKeysetCommandType">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests the creation of the first keyset of a Supplementary Security Domain in "Basic" mode.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:CreateFirstSSDKeysetCommandType">
				<xsd:sequence>
					<xsd:element name="KeySet" type="gpm:KeySetType">
						<xsd:annotation>
							<xsd:documentation>The value of the keys of a keyset.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BasicRandom_CreateFirstSSDKeysetCommandType">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests the creation of the first keyset of a Supplementary Security Domain in "Basic Random" mode.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:CreateFirstSSDKeysetCommandType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CCCMScenario1UsingPK_CreateFirstSSDKeysetCommandType">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests the creation of the first keyset of a Supplementary Security Domain in "CCCM Schenario 1 using PK scheme" mode.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:CreateFirstSSDKeysetCommandType">
				<xsd:sequence>
					<xsd:element name="SDIN" type="gpm:SDINType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The SSD's Security Domain Image Number.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="SSDOwnerCertificate" type="xsd:hexBinary">
						<xsd:annotation>
							<xsd:documentation>The PK certificate of the SSD Owner. The format of this field exactly corresponds to the output data of the EnrollSSDOwnerCertificate function.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CCCMScenario2A_CreateFirstSSDKeysetCommandType">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests the creation of the first keyset of a Supplementary Security Domain in "CCCM Schenario 2A" mode.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:CreateFirstSSDKeysetCommandType">
				<xsd:sequence>
					<xsd:element name="SDIN" type="gpm:SDINType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The SSD's Security Domain Image Number.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="SSDOwnerCertificate" type="xsd:hexBinary">
						<xsd:annotation>
							<xsd:documentation>The PK certificate of the SSD Owner. The format of this field exactly corresponds to the output data of the EnrollSSDOwnerCertificate function.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="EncryptedKeyValue" type="xsd:hexBinary">
						<xsd:annotation>
							<xsd:documentation>The key value, ciphered with the CASD public key.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Signature" type="xsd:hexBinary">
						<xsd:annotation>
							<xsd:documentation>The signature associated to the RGK Master Key: it is computed off-card by the SSD owner with its SSD owner certificate private key – refer to section "Pushing AP Secure Channel Keys" of the UICC Card Configuration.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CCCMScenario2B_CreateFirstSSDKeysetCommandType">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests the creation of the first keyset of a Supplementary Security Domain in "CCCM Schenario 2B" mode.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:CreateFirstSSDKeysetCommandType">
				<xsd:sequence>
					<xsd:element name="SDIN" type="gpm:SDINType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The SSD's Security Domain Image Number.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="EncryptedKeyValue" type="xsd:hexBinary">
						<xsd:annotation>
							<xsd:documentation>The key value, ciphered with the CASD public key.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CreateFirstSSDKeysetCommandResponseType">
		<xsd:annotation>
			<xsd:documentation>The response to the CreateFirstSSDKeysetCommandRequest SE Command</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SECommandResponseType">
				<xsd:sequence>
					<xsd:element name="SequenceCounter" type="xsd:nonNegativeInteger" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The value of the sequence counter of the keyset. If not set, value is to be considered as 0.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Basic_CreateFirstSSDKeysetCommandResponseType">
		<xsd:annotation>
			<xsd:documentation>The response to the Basic_CreateFirstSSDKeysetCommandRequest SE Command</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:CreateFirstSSDKeysetCommandResponseType">
				<xsd:sequence>
					<xsd:element name="keySet" type="gpm:KeySetType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The value of the keys created within the keyset.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BasicRandom_CreateFirstSSDKeysetCommandResponseType">
		<xsd:annotation>
			<xsd:documentation>The response to the BasicRandom_CreateFirstSSDKeysetCommandRequest SE Command</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:CreateFirstSSDKeysetCommandResponseType">
				<xsd:sequence>
					<xsd:element name="keySet" type="gpm:KeySetType">
						<xsd:annotation>
							<xsd:documentation>The value of the keys created within the keyset.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CCMScenario1UsingPK_CreateFirstSSDKeysetCommandResponseType">
		<xsd:annotation>
			<xsd:documentation>The response to the CCMScenario1UsingPK_CreateFirstSSDKeysetCommandRequest SE Command</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:CreateFirstSSDKeysetCommandResponseType">
				<xsd:sequence>
					<xsd:element name="EncryptedKeyValue" type="xsd:hexBinary">
						<xsd:annotation>
							<xsd:documentation>The key value, ciphered with the SSD owner certificate public key.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Signature" type="xsd:hexBinary">
						<xsd:annotation>
							<xsd:documentation>ThThe signature associated to the RGK Master Key. The signature is computed on-card by the CASD using its private key, including the Remainder Data – refer to section "Pulling AP Secure Channel Keys" of the UICC Card Configuration.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CCCMScenario2A_CreateFirstSSDKeysetCommandResponseType">
		<xsd:annotation>
			<xsd:documentation>The response to the CCCMScenario2A_CreateFirstSSDKeysetCommandRequest SE Command</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:CreateFirstSSDKeysetCommandResponseType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CCCMScenario2B_CreateFirstSSDKeysetCommandResponseType">
		<xsd:annotation>
			<xsd:documentation>The response to the CCCMScenario2B_CreateFirstSSDKeysetCommandRequest SE Command</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:CreateFirstSSDKeysetCommandResponseType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="LoadELFCommandType">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests the loading of an Executable Load File.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SECommandType">
				<xsd:sequence>
					<xsd:element name="ExecutableLoadFileAID" type="gpm:AIDType">
						<xsd:annotation>
							<xsd:documentation>AID of the Executable Load File (i.e. package) to be loaded.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ByteCode" type="xsd:hexBinary" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The byte code of the Executable Load File, excluding the Tags and Length specified in the GP 2.2 Card Specification and in the Amendment A of the GP 2.2 Card Specification ('C4' or 'D4')..</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ByteCodeEncrypted" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>When the byte code is provided as an input data, this field  specifies whether the byte code is encrypted or not.
		When the byte code is encrypted, according to the Amendment A of the GP 2.2 Card Specification, the tag 'D4' is used. When the byte code is not encrypted, the tag 'C4' is used. If this field is not present, the Executable Load File SHALL be considered as not encrypted.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ParametersProfileIdentifier" type="xsd:positiveInteger" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Specifies the identifier of the parameters profile to be used.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="DAPBlock" type="gpm:DAPBlockType" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>DAP Block of the Executable Load File.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="SSDAidForExtradition" type="gpm:AIDType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>AID of the SD to which the Executable Load File will be immediately extradited, if required. If not present, no extradition SHALL be done.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="DAPBlockType">
		<xsd:sequence>
			<xsd:element name="SecurityDomainAID" type="gpm:AIDType">
				<xsd:annotation>
					<xsd:documentation>AID of the Security Domain that SHALL verify the Data Block Signature.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="DataBlockSignature" type="xsd:hexBinary">
				<xsd:annotation>
					<xsd:documentation>The value of the Data Block Signature.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ExtraditeCommandType">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests the extradition of an Application or an Executable Load File to a targeted Security Domain.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SECommandType">
				<xsd:sequence>
					<xsd:element name="ApplicationOrExecutableLoadFileAID" type="gpm:AIDType">
						<xsd:annotation>
							<xsd:documentation>AID of the Application (either a simple Application or a Supplementary Security Domain) or Executable Load File to be extradited.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="SSDAidForExtradition" type="gpm:AIDType">
						<xsd:annotation>
							<xsd:documentation>AID of the SD to which extraditing the Application or Executable Load File.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="InstantiateApplicationCommandType">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests the instantiation of a particular Application.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SECommandType">
				<xsd:sequence>
					<xsd:element name="ExecutableLoadFileAID" type="gpm:AIDType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>AID of the Executable Load File that contains the Executable Module to be instantiated. Mandatory for simple Application instantiation; optional for SSD creation.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ExecutableModuleAID" type="gpm:AIDType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>AID of the Executable Module to be instantiated. Mandatory for simple Application instantiation; optional for SSD creation.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ApplicationAID" type="gpm:AIDType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>AID to be used for the Application instance.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ParametersProfileIdentifier" type="xsd:positiveInteger" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Specifies the identifier of the parameters profile to be used.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ApplicationSpecificParameters" type="xsd:hexBinary" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Application specific installation parameters corresponding to the 'C9' tag of the install parameters field (including the 'C9' tag itself).
		To be used to force the Application specific parameters. The overall content of the 'C9' tag shall be provided. It globally supersedes the 'C9' tag content that may be specified in the selected instantiation profile.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="GenerateTAR" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field requests for the generation of a TAR for the Application.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="MakeSelectable" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field specifies whether the Application should be immediately made selectable or not.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="InstantiateApplicationCommandResponseType">
		<xsd:annotation>
			<xsd:documentation>The response to the InstantiateApplicationCommand SE Command</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SECommandResponseType">
				<xsd:sequence>
					<xsd:element name="ApplicationAID" type="gpm:AIDType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The AID of the instantiated Application.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ApplicationTAR" type="gpm:TARType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The TAR of the instantiated Application.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="MakeSelectableApplicationCommandType">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests for making an Application selectable.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SECommandType">
				<xsd:sequence>
					<xsd:element name="ApplicationAID" type="gpm:AIDType">
						<xsd:annotation>
							<xsd:documentation>AID of the Application to be made selectable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ParametersProfileIdentifier" type="xsd:positiveInteger" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Specifies the identifier of the parameters profile to be used.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ApplicationRegistryUpdateCommandType">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests the registry update for an Application.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SECommandType">
				<xsd:sequence>
					<xsd:element name="ApplicationAID" type="gpm:AIDType">
						<xsd:annotation>
							<xsd:documentation>AID of the Application which registry is to be updated.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ParametersProfileIdentifier" type="xsd:positiveInteger" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Specifies the identifier of the parameters profile to be used.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SetStatusCommandType">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests a change of the Application Life Cycle State (either a simple Application or a Supplementary Security Domain).</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SECommandType">
				<xsd:sequence>
					<xsd:element name="ApplicationAID" type="gpm:AIDType">
						<xsd:annotation>
							<xsd:documentation>AID of the Application (either a simple Application or a Supplementary Security Domain).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="LockControl" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>This field specifies the requested state transition. 
		- If True, the application SHALL be locked
		- If False,  the application SHALL be unlocked</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="DeleteCommandType">
		<xsd:annotation>
			<xsd:documentation>This SE Command requests the deletion of an Application (either a simple Application or a Supplementary Security Domain) or an Executable Load File.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:SECommandType">
				<xsd:sequence>
					<xsd:element name="ApplicationOrExecutableLoadFileAID" type="gpm:AIDType">
						<xsd:annotation>
							<xsd:documentation>AID of the Application (either a simple Application or a Supplementary Security Domain) or Executable Load File to be deleted.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="DeleteRelatedObjects" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field specifies whether the related objects (i.e. the existing Applications instantiated from the Executable Load File to be deleted) shall also be deleted or not.
		- If True, the related objects SHALL be deleted.
		- If False, the related objects SHALL NOT be deleted.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="MobileNFCServiceContextType">
		<xsd:annotation>
			<xsd:documentation>Context related to mobile-NFC service management.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The Mobile Subscription through which the Secure Element is accessible.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Service" type="gpm:ServiceIdentifierType">
				<xsd:annotation>
					<xsd:documentation>The mobile-NFC service.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The qualifier of the mobile-NFC service.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<!-- 2.0.0: Not directly put into the message: rather put into the Requirement attribute of the ProcessingStep element
			<xsd:element name="StopOnWarning" type="xsd:boolean" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Specifies whether the processing of SE Commands shall stop ('True') or continue ('False') if a warning is encountered. If not present, parameter is considered to be set to 'False'.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			-->
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SECommandsGenerationAndRemoteExecutionRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for the generation and the OTA execution of a sequence of Card Content Management commands for a Secure Element, in the context of the management of a particular instance of mobile-NFC service, through a particular Mobile Subscription.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="MobileNFCServiceContext" type="gpm:MobileNFCServiceContextType">
						<xsd:annotation>
							<xsd:documentation>Context related to mobile-NFC service management.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="gpm:CardCustomization">
						<xsd:annotation>
							<xsd:documentation>The Card Customization message for application management.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="CommandExecutionStatusType">
		<xsd:annotation>
			<xsd:documentation>Indicates whether the SE Command has been executed or not.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="EXECUTED_SUCCESS"/>
			<xsd:enumeration value="EXECUTED_WITHWARNING"/>
			<xsd:enumeration value="EXECUTED_FAILED"/>
			<xsd:enumeration value="NOTEXECUTED"/>
			<xsd:enumeration value="DELIVEREDWITHNORESPONSE"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="CommandStatusCodeDataType">
		<xsd:annotation>
			<xsd:documentation>Provides the reason of the Command Execution Status value when the Command Execution Status is 'Executed-WithWarning' or 'Executed-Failed'. The possible values depend on the SE Command and may be implementation dependant</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Subject" type="gpm:ObjectIdentifierType">
				<xsd:annotation>
					<xsd:documentation>Represents the system element concerned by the exception.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Reason" type="gpm:ObjectIdentifierType">
				<xsd:annotation>
					<xsd:documentation>Represents the reason of the exception.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SECommandResultType">
		<xsd:annotation>
			<xsd:documentation>Provide the individual result of the on-card execution of a corresponding SE command.
Sequence of result follows the sequence of SE Command provided in the function input data.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="CommandExecutionStatus" type="gpm:CommandExecutionStatusType">
				<xsd:annotation>
					<xsd:documentation>Indicates whether the SE Command has been executed or not.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="CommandStatusCodeData" type="gpm:CommandStatusCodeDataType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Provides the reason of the Command Execution Status value when the Command Execution Status is 'Executed-WithWarning' or 'Executed-Failed'. The possible values depend on the SE Command and may be implementation dependant.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="SECommandResponse" type="gpm:SECommandResponseType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Additional output data that may be returned by the SE Command.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<!-- Version 2.0.1: Begin update -->
			<xsd:element name="ResponseAPDU" type="gpm:APDUResponseType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>When the SE Command has been executed ("Command Execution Status Code" = 'Executed-Success' or 'Executed-With warning' or 'Executed-Failed'), it provides the Response APDU of the last APDU executed by the SE. This might be the last APDU of the script (in case of correct execution of the script), or the first failed APDU (in case an error is encountered during the script execution).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<!-- Version 2.0.1: End update -->
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="BearerType">
		<xsd:annotation>
			<xsd:documentation>The possible OTA bearers. The following values are pre-defined, but other values MAY be defined by the SDM: 1-SMS to UICC, 2-CAT-TP to UICC, 3-HTTP to UICC, 11-SMS to ESE/SMC, 12-HTTP to ESE/SMC</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:positiveInteger"/>
	</xsd:simpleType>
	<xsd:complexType name="MobileNFCServiceResultContextType">
		<xsd:annotation>
			<xsd:documentation>Context related to mobile-NFC service management, for results.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="UsedBearer" type="gpm:BearerType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The OTA bearer really used for the execution of the secure script.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SECommandsGenerationAndRemoteExecutionResponseResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the SECommandsGenerationAndRemoteExecutionRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="gpm:CardAuditTrail">
				<xsd:annotation>
					<xsd:documentation>The Card Customization message for application management.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="MobileNFCServiceResultContext" type="gpm:MobileNFCServiceResultContextType">
				<xsd:annotation>
					<xsd:documentation>Context related to mobile-NFC service management.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SECommandsGenerationAndRemoteExecutionResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the SECommandsGenerationAndRemoteExecutionRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:SECommandsGenerationAndRemoteExecutionResponseResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="SECommandsGenerationAndRemoteExecutionRequest" type="gpm:SECommandsGenerationAndRemoteExecutionRequestType"/>
	<xsd:element name="SECommandsGenerationAndRemoteExecutionResponse" type="gpm:SECommandsGenerationAndRemoteExecutionResponseType"/>
	<!-- Delegated Management functions -->
	<xsd:complexType name="CCMCommandType">
		<xsd:annotation>
			<xsd:documentation>A Card Content Management command.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="APDU" type="gpm:APDUType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>The individual APDUs of a CCM command.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="GenerateDMTokenRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for the generation of one to several Delegated Management Tokens, in the context of the management of a particular instance of mobile-NFC service on a particular Secure Element.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element into which the mobile-NFC service is deployed/under deployment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Service" type="gpm:ServiceIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="CCMCommand" type="gpm:CCMCommandType" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>The Card Content Management command for which the Token has to be generated.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GenerateDMTokenResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the GenerateDMTokenRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="UpdatedCCMCommand" type="gpm:CCMCommandType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>The CCM command, updated with the generated Token.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="GenerateDMTokenResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the GenerateDMTokenRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:GenerateDMTokenResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="GenerateDMTokenRequest" type="gpm:GenerateDMTokenRequestType"/>
	<xsd:element name="GenerateDMTokenResponse" type="gpm:GenerateDMTokenResponseType"/>
	<xsd:complexType name="CCMCommandStatusType">
		<xsd:annotation>
			<xsd:documentation>The status of execution of the Card Content Management commands.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="CommandExecutionStatus" type="gpm:CommandExecutionStatusType">
				<xsd:annotation>
					<xsd:documentation>The receipt to verify.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Receipt" type="xsd:hexBinary" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The receipt to verify.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ConfirmationData" type="xsd:hexBinary" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The confirmation data of the command to verify as defined in GP 2.2 Card Specifications.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="VerifyDMReceiptRequestType">
		<xsd:annotation>
			<xsd:documentation>This function enables to check the Delegated Management Receipts returned by the Secure Element, in the context of the management of a particular instance of mobile-NFC service of a particular Secure Element.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element into which the mobile-NFC service is deployed/under deployment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Service" type="gpm:ServiceIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="CCMCommandStatus" type="gpm:CCMCommandStatusType" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>The status of execution of the Card Content Management commands.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="VerifyDMReceiptResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the VerifyDMReceiptRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="VerifyDMReceiptRequest" type="gpm:VerifyDMReceiptRequestType"/>
	<xsd:element name="VerifyDMReceiptResponse" type="gpm:VerifyDMReceiptResponseType"/>
	<!-- Scripts sending functions -->
	<xsd:simpleType name="ScriptFormatType">
		<xsd:annotation>
			<xsd:documentation>Script format (following ETSI TS 102 226 [11]) : either Compact or Expanded.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="COMPACT"/>
			<xsd:enumeration value="EXPANDED"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="BeginConversationRequestType">
		<xsd:annotation>
			<xsd:documentation>Request performing an OTA conversation with an Application or Security Domain of a Secure Element, in the context of the management of a particular instance of mobile-NFC service through a particular Mobile Subscription.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element into which the mobile-NFC service is deployed/under deployment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the Secure Element is accessible.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Service" type="gpm:ServiceIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="TargetIdentifier" type="gpm:SEApplicationIdentifierType">
						<xsd:annotation>
							<xsd:documentation>Specifies the AID or the TAR (for UICC only) of the Application or Security Domain that shall execute the script.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="RequestedScriptFormat" type="gpm:ScriptFormatType">
						<xsd:annotation>
							<xsd:documentation>Indicates the requested script format to be used for the conversation (following ETSI TS 102 226) : either Compact or Expanded..</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="EstimatedAPDUScriptSize" type="xsd:nonNegativeInteger">
						<xsd:annotation>
							<xsd:documentation>This is an indicative value of the rough size of the total amount of bytes to be sent during this conversation. </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BeginConversationResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the BeginConversationRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="ConversationID" type="xsd:positiveInteger">
				<xsd:annotation>
					<xsd:documentation>ID of the conversation initiated by this call to BeginConversation. This ID is to be used in consecutive calls to SendScript and End Conversation.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="UsedBearer" type="gpm:BearerType">
				<xsd:annotation>
					<xsd:documentation>Indicates the OTA bearer that will be used to send the script.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="APDUScriptSize" type="xsd:nonNegativeInteger">
				<xsd:annotation>
					<xsd:documentation>Size of the maximum script that can be transferred over this bearer, i.e. the sum of the size of all APDUs that can be sent by one SendScript operation. A value of 0 means no limitation.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="NumberOfAPDUs" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Maximum number of APDUs that can be sent in one script. Only returned in case of Expanded format, i.e. if the Compact Format output data is set to False. A value of 0 means no limitation.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ScriptFormat" type="gpm:ScriptFormatType">
				<xsd:annotation>
					<xsd:documentation>Indicates the format that will be used by the function provider of the Send Script function to format the given APDU command script, according to ETSI TS 102 226: either Compact or Expanded.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="APDUResponseScriptSize" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The maximum size of all APDU responses that can be delivered by the SE in a single script execution.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="TimeToLive" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The time to live of the conversation, in seconds.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="BeginConversationResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the BeginConversationRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:BeginConversationResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="BeginConversationRequest" type="gpm:BeginConversationRequestType"/>
	<xsd:element name="BeginConversationResponse" type="gpm:BeginConversationResponseType"/>
	<xsd:complexType name="SendScriptRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for the sending of a set of APDUs to a Secure Element, in the context of the management of a particular instance of mobile-NFC service through a particular Mobile Subscription. The call to this function SHALL be done in the context of an already declared conversation.
</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="ConversationID" type="xsd:positiveInteger">
						<xsd:annotation>
							<xsd:documentation>ID of a conversation opened by the BeginConversation function.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="CommandAPDU" type="gpm:APDUType" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>The command APDU to be sent and executed by the targeted application.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SendScriptResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the SendScriptRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<!-- Version 2.0.1: Begin update -->
			<xsd:element name="ResponseAPDU" type="gpm:APDUResponseType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>The response APDU that are returned by the Secure Element, when executing the script.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<!-- Version 2.0.1: End update -->
			<xsd:element name="FailedAPDUIndex" type="xsd:positiveInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>If one Command APDU execution has failed, this field contains the index (in the input Command APDU list) of this APDU. Only provided in Compact mode, when one of the Command APDU has failed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SendScriptResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the SendScriptRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:SendScriptResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="SendScriptRequest" type="gpm:SendScriptRequestType"/>
	<xsd:element name="SendScriptResponse" type="gpm:SendScriptResponseType"/>
	<xsd:complexType name="EndConversationRequestType">
		<xsd:annotation>
			<xsd:documentation>Indicates that a conversation (represented by the "Conversation ID" input data) is no longer intended to be used.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="ConversationID" type="xsd:positiveInteger">
						<xsd:annotation>
							<xsd:documentation>ID of a conversation opened by the BeginConversation function.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="EndConversationResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the EndConversationRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="EndConversationRequest" type="gpm:EndConversationRequestType"/>
	<xsd:element name="EndConversationResponse" type="gpm:EndConversationResponseType"/>
	<!-- Secure Element audit functions -->
	<xsd:simpleType name="SEAuditType">
		<xsd:annotation>
			<xsd:documentation>The type of audit to be performed.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="OFFLINE"/>
			<xsd:enumeration value="ONLINE"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="GetApplicationOrELFStatusRequestType">
		<xsd:annotation>
			<xsd:documentation>This function is used to request information about components present on a Secure Element.The command is used to audit one or many components among Applications, Security Domains, and Executable Load Files.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element that is audited.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the Secure Element can be audited.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ApplicationOrExecutableLoadFileAID" type="gpm:AIDType" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>AID of components to be audited. Only the components which AIDs exactly match the provided AIDs will be considered. In other words, providing a partial AID does not enable to get information on all Applications having this partial AID.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="AuditType" type="gpm:SEAuditType">
						<xsd:annotation>
							<xsd:documentation>The type of audit to be performed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ComponentStatusType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>This complex structure contains the information about an audited component.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="ApplicationOrExecutableLoadFileAID" type="gpm:AIDType">
				<xsd:annotation>
					<xsd:documentation>AID of the audited component.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="SEApplicationLifeCycleType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="INSTALLED"/>
			<xsd:enumeration value="SELECTABLE"/>
			<xsd:enumeration value="APPLICATION_SPECIFIC"/>
			<xsd:enumeration value="LOCKED"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Application_ComponentStatusType">
		<xsd:annotation>
			<xsd:documentation>This complex structure contains the information about an audited Application.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:ComponentStatusType">
				<xsd:sequence>
					<!-- Version 2.0.1: Begin update -->
					<xsd:element name="ApplicationLifeCycle" type="gpm:SEApplicationLifeCycleType" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Represents the GlobalPlatform life cycle state of the Application.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<!-- Version 2.0.1: End update -->
					<xsd:element name="ApplicationSpecificBits" type="xsd:byte" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field represents the content of the bits b4 to b7 of the Application life cycle state byte. These bits SHALL be returned as a full byte into which bits b1 to b3 and b8 SHALL be set to '0'.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="SDLifeCycleType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="INSTALLED"/>
			<xsd:enumeration value="SELECTABLE"/>
			<xsd:enumeration value="PERSONALIZED"/>
			<xsd:enumeration value="LOCKED"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="SD_ComponentStatusType">
		<xsd:annotation>
			<xsd:documentation>This complex structure contains the information about an audited Security Domain</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:ComponentStatusType">
				<xsd:sequence>
					<!-- Version 2.0.1: Begin update -->
					<xsd:element name="SDLifeCycle" type="gpm:SDLifeCycleType" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Represents the GlobalPlatform life cycle state of the Secuirty Domain.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<!-- Version 2.0.1: End update -->
					<xsd:element name="DescendantComponent" type="gpm:ComponentStatusType" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>The list of components contained in the Security Domain.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="ELFLifeCycleType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="LOADED"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="ELF_ComponentStatusType">
		<xsd:annotation>
			<xsd:documentation>This complex structure contains the information about an audited Executable Load File</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:ComponentStatusType">
				<xsd:sequence>
					<!-- Version 2.0.1: Begin update -->
					<xsd:element name="ELFLifeCycle" type="gpm:ELFLifeCycleType" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Represents the GlobalPlatform life cycle state of the Executable Load File.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<!-- Version 2.0.1: End update -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetApplicationOrELFStatusResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the GetApplicationOrELFStatusRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="ComponentStatus" type="gpm:ComponentStatusType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>This complex structure contains the information about an audited component.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="GetApplicationOrELFStatusResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the GetApplicationOrELFStatusRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:GetApplicationOrELFStatusResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="GetApplicationOrELFStatusRequest" type="gpm:GetApplicationOrELFStatusRequestType"/>
	<xsd:element name="GetApplicationOrELFStatusResponse" type="gpm:GetApplicationOrELFStatusResponseType"/>
	<!-- Functions for the SCWS service portal management -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xsd:complexType name="LoadSCWSServicePortalRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for the loading of the Smart Card Web Server (SCWS) service portal, in the context of the management of a particular instance of mobile-NFC service through a particular Mobile Subscription.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element into which the mobile-NFC service is deployed/under deployment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the Secure Element is accessible.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Service" type="gpm:ServiceIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServicePortalIdentifier" type="gpm:SCWSPortalIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Identifier of the SCWS service portal to be loaded. This field is optional as, following business agreements, the function provider may be able to know exactly which SCWS service portal shall be loaded for a given Service Identifier.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="LoadSCWSServicePortalResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the LoadSCWSServicePortalRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="LoadSCWSServicePortalRequest" type="gpm:LoadSCWSServicePortalRequestType"/>
	<xsd:element name="LoadSCWSServicePortalResponse" type="gpm:LoadSCWSServicePortalResponseType"/>
	<xsd:complexType name="DeleteSCWSServicePortalRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for the deletion of the Smart Card Web Server (SCWS) service portal, in the context of the management of a particular instance of mobile-NFC service through a particular Mobile Subscription.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element into which the mobile-NFC service is deployed/under deployment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the Secure Element is accessible.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Service" type="gpm:ServiceIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServicePortalIdentifier" type="gpm:SCWSPortalIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Identifier of the SCWS service portal to be deleted. This field is optional as, following business agreements, the function provider may be able to know exactly which SCWS service portal shall be deleted for a given Service Identifier.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="DeleteSCWSServicePortalResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the DeleteSCWSServicePortalRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="DeleteSCWSServicePortalRequest" type="gpm:DeleteSCWSServicePortalRequestType"/>
	<xsd:element name="DeleteSCWSServicePortalResponse" type="gpm:DeleteSCWSServicePortalResponseType"/>
	<!-- Functions for the Service UI management -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xsd:simpleType name="DeviceInstallationAccountabilityType">
		<xsd:annotation>
			<xsd:documentation>The possible accountability that may be requested for installing a Device application.
Pre-defined accountabilities are: 1-Trigger, 2-Full download</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:positiveInteger"/>
	</xsd:simpleType>
	<xsd:complexType name="DeviceInstallationModeType">
		<xsd:annotation>
			<xsd:documentation>The mode for the Device application loading</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Accountability" type="gpm:DeviceInstallationAccountabilityType">
				<xsd:annotation>
					<xsd:documentation>The accountability that is requested for installing the Device application.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Silent" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation>Indicates whether the installation shall be silent (no interaction with the end user) or not.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="LoadDeviceApplicationRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for the loading of a Device application, in the context of the management of a particular instance of mobile-NFC service through a particular Mobile Subscription.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the Device is accessible.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Service" type="gpm:ServiceIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="DeviceApplicationIdentifier" type="gpm:DeviceApplicationIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Identifier of the Device application to be loaded. This field is optional as, following business agreements, the function provider may be able to know exactly which Device application shall be loaded for a given Service Identifier.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="PreferredInstallationMode" type="gpm:DeviceInstallationModeType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The preferred installation mode. If not present, a default installation mode shall be used.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="LoadDeviceApplicationResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the LoadDeviceApplicationRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="UsedInstallationMode" type="gpm:DeviceInstallationModeType">
				<xsd:annotation>
					<xsd:documentation>The installation mode used for the loading of the Device Application.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="LoadDeviceApplicationResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the LoadDeviceApplicationRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:LoadDeviceApplicationResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="LoadDeviceApplicationRequest" type="gpm:LoadDeviceApplicationRequestType"/>
	<xsd:element name="LoadDeviceApplicationResponse" type="gpm:LoadDeviceApplicationResponseType"/>
	<xsd:complexType name="BindDeviceApplicationToSEApplicationRequestType">
		<xsd:annotation>
			<xsd:documentation>Device applications belonging to a mobile-NFC service may need to dialog with the service's SE applications. Depending on the Device technology, some security mechanisms may exist to prevent from a SE application to be accessed by any Device application. This is for example the case in the MIDP 2.0 environment, where an Access Control Files (ACF) mechanism enables to specify which Midlet is able to access to a particular application in the SE.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element into which the mobile-NFC service is deployed/under deployment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the Secure Element is accessible.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Service" type="gpm:ServiceIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="DeviceApplicationIdentifier" type="gpm:DeviceApplicationIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Identifier of the Device application to be bound. This field is optional as, following business agreements, the function provider may be able to know exactly which Device application shall to be bound for a given Service Identifier.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="SEApplicationAID" type="gpm:AIDType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>AID of the SE application to be bound. This field is optional as, following business agreements, the function provider may be able to know exactly which SE application shall to be bound for a given Service Identifier.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BindDeviceApplicationToSEApplicationResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the BindDeviceApplicationToSEApplicationRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="BindDeviceApplicationToSEApplicationRequest" type="gpm:BindDeviceApplicationToSEApplicationRequestType"/>
	<xsd:element name="BindDeviceApplicationToSEApplicationResponse" type="gpm:BindDeviceApplicationToSEApplicationResponseType"/>
	<xsd:simpleType name="DeviceDeletionAccountabilityType">
		<xsd:annotation>
			<xsd:documentation>The possible accountability that may be requested for deleting a Device application.
Pre-defined accountabilities are: 1-Trigger, 2-Full deletion, 3-Request end user</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:positiveInteger"/>
	</xsd:simpleType>
	<xsd:complexType name="DeviceDeletionModeType">
		<xsd:annotation>
			<xsd:documentation>The mode for the Device application deletion.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Accountability" type="gpm:DeviceDeletionAccountabilityType">
				<xsd:annotation>
					<xsd:documentation>The accountability that is requested for deleting the Device application.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Silent" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation>Indicates whether the deletion shall be silent (no interaction with the end user) or not.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DeleteDeviceApplicationRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for the deletion of a Device application, in the context of the management of a particular instance of mobile-NFC service through a particular Mobile Subscription.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the Device is accessible.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Service" type="gpm:ServiceIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="DeviceApplicationIdentifier" type="gpm:DeviceApplicationIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Identifier of the Device application to be deleted. This field is optional as, following business agreements, the function provider may be able to know exactly which Device application shall be deleted for a given Service Identifier.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="PreferredDeletionMode" type="gpm:DeviceDeletionModeType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The preferred deletion mode. If not present, a default deletion mode shall be used.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="DeleteDeviceApplicationResponseDataType">
		<xsd:annotation>
			<xsd:documentation>Data of the response to the DeleteDeviceApplicationRequest message, in case or successful processing of the function</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="UsedDeletionMode" type="gpm:DeviceDeletionModeType">
				<xsd:annotation>
					<xsd:documentation>The deletion mode used for the deletion of the Device Application.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DeleteDeviceApplicationResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the DeleteDeviceApplicationRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType">
				<xsd:sequence>
					<xsd:element name="ResponseData" type="gpm:DeleteDeviceApplicationResponseDataType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="DeleteDeviceApplicationRequest" type="gpm:DeleteDeviceApplicationRequestType"/>
	<xsd:element name="DeleteDeviceApplicationResponse" type="gpm:DeleteDeviceApplicationResponseType"/>
	<xsd:complexType name="UnbindDeviceApplicationToSEApplicationRequestType">
		<xsd:annotation>
			<xsd:documentation>Requests for the unbinding of a Device application from a SE application, in the context of the management of a particular instance of mobile-NFC service through a particular Mobile Subscription.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicRequestType">
				<xsd:sequence>
					<xsd:element name="SecureElement" type="gpm:SEIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The Secure Element into which the mobile-NFC service is deployed/under deployment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="MobileSubscription" type="gpm:MobileSubscriptionIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Mobile Subscription through which the Secure Element is accessible.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Service" type="gpm:ServiceIdentifierType">
						<xsd:annotation>
							<xsd:documentation>The mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ServiceQualifier" type="gpm:ServiceQualifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The qualifier of the mobile-NFC service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="DeviceApplicationIdentifier" type="gpm:DeviceApplicationIdentifierType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Identifier of the Device application to be unbound. This field is optional as, following business agreements, the function provider may be able to know exactly which Device application shall to be unbound for a given Service Identifier.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="SEApplicationAID" type="gpm:AIDType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>AID of the SE application to be unbound. This field is optional as, following business agreements, the function provider may be able to know exactly which SE application shall to be unbound for a given Service Identifier.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="UnbindDeviceApplicationToSEApplicationResponseType">
		<xsd:annotation>
			<xsd:documentation>Response to the UnbindDeviceApplicationToSEApplicationRequest message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gpm:BasicResponseType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="UnbindDeviceApplicationToSEApplicationRequest" type="gpm:UnbindDeviceApplicationToSEApplicationRequestType"/>
	<xsd:element name="UnbindDeviceApplicationToSEApplicationResponse" type="gpm:UnbindDeviceApplicationToSEApplicationResponseType"/>
	<!-- ========================= -->
	<!-- Version 2.0.0: End update -->
	<!-- ========================= -->
</xsd:schema>
